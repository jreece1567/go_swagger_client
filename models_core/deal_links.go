package models_core

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

/*DealLinks deal links

swagger:model dealLinks
*/
type DealLinks struct {

	/* Link to the deal image.

	Required: true
	*/
	Image *GenericLink `json:"image"`

	/* Retailer name, URL and identifier.

	Required: true
	*/
	Retailer *DealRetailerLink `json:"retailer"`

	/* Link to the retailer logo.

	Required: true
	*/
	RetailerLogo *GenericLink `json:"retailer_logo"`
}

// Validate validates this deal links
func (m *DealLinks) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateImage(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateRetailer(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateRetailerLogo(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DealLinks) validateImage(formats strfmt.Registry) error {

	if err := validate.Required("image", "body", m.Image); err != nil {
		return err
	}

	if m.Image != nil {

		if err := m.Image.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}

func (m *DealLinks) validateRetailer(formats strfmt.Registry) error {

	if err := validate.Required("retailer", "body", m.Retailer); err != nil {
		return err
	}

	if m.Retailer != nil {

		if err := m.Retailer.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}

func (m *DealLinks) validateRetailerLogo(formats strfmt.Registry) error {

	if err := validate.Required("retailer_logo", "body", m.RetailerLogo); err != nil {
		return err
	}

	if m.RetailerLogo != nil {

		if err := m.RetailerLogo.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}
