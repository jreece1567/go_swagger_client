package models_core

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/go-openapi/errors"
)

/*Http401Error Unauthorized request.

swagger:model http401Error
*/
type Http401Error struct {

	/* List of errors with this attribute.
	 */
	AccessToken []string `json:"access_token,omitempty"`

	/* Request parameters.
	 */
	Params []*ParamDetails `json:"params,omitempty"`

	/* List of errors with this attribute.
	 */
	XAPISecret []string `json:"x_api_secret,omitempty"`
}

// Validate validates this http401 error
func (m *Http401Error) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAccessToken(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateParams(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateXAPISecret(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Http401Error) validateAccessToken(formats strfmt.Registry) error {

	if swag.IsZero(m.AccessToken) { // not required
		return nil
	}

	return nil
}

func (m *Http401Error) validateParams(formats strfmt.Registry) error {

	if swag.IsZero(m.Params) { // not required
		return nil
	}

	return nil
}

func (m *Http401Error) validateXAPISecret(formats strfmt.Registry) error {

	if swag.IsZero(m.XAPISecret) { // not required
		return nil
	}

	return nil
}
