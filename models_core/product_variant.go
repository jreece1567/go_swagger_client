package models_core

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/go-openapi/errors"
)

/*ProductVariant Product Variant

swagger:model productVariant
*/
type ProductVariant struct {

	/* Product Variant Attributes
	 */
	Attributes *VariantAttributes `json:"attributes,omitempty"`

	/* Product description
	 */
	Description string `json:"description,omitempty"`

	/* ean
	 */
	Ean string `json:"ean,omitempty"`

	/* images
	 */
	Images []string `json:"images,omitempty"`

	/* Default flag
	 */
	IsDefault bool `json:"is_default,omitempty"`

	/* Product Variant Price
	 */
	Price *VariantPrice `json:"price,omitempty"`

	/* Product Retailer Attributes
	 */
	RetailerAttributes *RetailerAttributes `json:"retailer_attributes,omitempty"`

	/* Product variant retailer url
	 */
	RetailerProductURL string `json:"retailer_product_url,omitempty"`

	/* Product variant id
	 */
	Sku string `json:"sku,omitempty"`
}

// Validate validates this product variant
func (m *ProductVariant) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAttributes(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateImages(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validatePrice(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateRetailerAttributes(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ProductVariant) validateAttributes(formats strfmt.Registry) error {

	if swag.IsZero(m.Attributes) { // not required
		return nil
	}

	if m.Attributes != nil {

		if err := m.Attributes.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}

func (m *ProductVariant) validateImages(formats strfmt.Registry) error {

	if swag.IsZero(m.Images) { // not required
		return nil
	}

	return nil
}

func (m *ProductVariant) validatePrice(formats strfmt.Registry) error {

	if swag.IsZero(m.Price) { // not required
		return nil
	}

	if m.Price != nil {

		if err := m.Price.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}

func (m *ProductVariant) validateRetailerAttributes(formats strfmt.Registry) error {

	if swag.IsZero(m.RetailerAttributes) { // not required
		return nil
	}

	if m.RetailerAttributes != nil {

		if err := m.RetailerAttributes.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}
