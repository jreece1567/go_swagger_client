package models_core

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

/*CurationCreateBody Payload data for creating or updating a curation

swagger:model curationCreateBody
*/
type CurationCreateBody struct {

	/* Code of new curation
	 */
	Code string `json:"code,omitempty"`

	/* Country code. Lowercase two-character code for country.

	Required: true
	*/
	Country *string `json:"country"`

	/* Description of new curation
	 */
	Description string `json:"description,omitempty"`

	/* Availability of new curation (finish)

	Required: true
	*/
	EndsAt *strfmt.DateTime `json:"ends_at"`

	/* Featured
	 */
	Featured bool `json:"featured,omitempty"`

	/* Image ref of new curation
	 */
	ImageRef string `json:"image_ref,omitempty"`

	/* Curation name

	Required: true
	*/
	Name *string `json:"name"`

	/* SEO title of new curation
	 */
	SeoTitle string `json:"seo_title,omitempty"`

	/* Availability of new curation (start)

	Required: true
	*/
	StartsAt *strfmt.DateTime `json:"starts_at"`

	/* State of new curation
	 */
	State string `json:"state,omitempty"`
}

// Validate validates this curation create body
func (m *CurationCreateBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCountry(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateEndsAt(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateStartsAt(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var curationCreateBodyTypeCountryPropEnum []interface{}

// prop value enum
func (m *CurationCreateBody) validateCountryEnum(path, location string, value string) error {
	if curationCreateBodyTypeCountryPropEnum == nil {
		var res []string
		if err := json.Unmarshal([]byte(`["au","nz","uk","us"]`), &res); err != nil {
			return err
		}
		for _, v := range res {
			curationCreateBodyTypeCountryPropEnum = append(curationCreateBodyTypeCountryPropEnum, v)
		}
	}
	if err := validate.Enum(path, location, value, curationCreateBodyTypeCountryPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *CurationCreateBody) validateCountry(formats strfmt.Registry) error {

	if err := validate.Required("country", "body", m.Country); err != nil {
		return err
	}

	// value enum
	if err := m.validateCountryEnum("country", "body", *m.Country); err != nil {
		return err
	}

	return nil
}

func (m *CurationCreateBody) validateEndsAt(formats strfmt.Registry) error {

	if err := validate.Required("ends_at", "body", m.EndsAt); err != nil {
		return err
	}

	return nil
}

func (m *CurationCreateBody) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

func (m *CurationCreateBody) validateStartsAt(formats strfmt.Registry) error {

	if err := validate.Required("starts_at", "body", m.StartsAt); err != nil {
		return err
	}

	return nil
}
