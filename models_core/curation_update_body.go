package models_core

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

/*CurationUpdateBody Payload data for creating or updating a curation

swagger:model curationUpdateBody
*/
type CurationUpdateBody struct {

	/* Code of curation
	 */
	Code string `json:"code,omitempty"`

	/* Country code. Lowercase two-character code for country.
	 */
	Country string `json:"country,omitempty"`

	/* Description of curation
	 */
	Description string `json:"description,omitempty"`

	/* Availability of curation (finish)
	 */
	EndsAt strfmt.DateTime `json:"ends_at,omitempty"`

	/* Featured
	 */
	Featured bool `json:"featured,omitempty"`

	/* Image ref of curation
	 */
	ImageRef string `json:"image_ref,omitempty"`

	/* Curation name
	 */
	Name string `json:"name,omitempty"`

	/* SEO title of curation
	 */
	SeoTitle string `json:"seo_title,omitempty"`

	/* Availability of curation (start)
	 */
	StartsAt strfmt.DateTime `json:"starts_at,omitempty"`

	/* State of curation
	 */
	State string `json:"state,omitempty"`
}

// Validate validates this curation update body
func (m *CurationUpdateBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCountry(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var curationUpdateBodyTypeCountryPropEnum []interface{}

// prop value enum
func (m *CurationUpdateBody) validateCountryEnum(path, location string, value string) error {
	if curationUpdateBodyTypeCountryPropEnum == nil {
		var res []string
		if err := json.Unmarshal([]byte(`["au","nz","uk","us"]`), &res); err != nil {
			return err
		}
		for _, v := range res {
			curationUpdateBodyTypeCountryPropEnum = append(curationUpdateBodyTypeCountryPropEnum, v)
		}
	}
	if err := validate.Enum(path, location, value, curationUpdateBodyTypeCountryPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *CurationUpdateBody) validateCountry(formats strfmt.Registry) error {

	if swag.IsZero(m.Country) { // not required
		return nil
	}

	// value enum
	if err := m.validateCountryEnum("country", "body", m.Country); err != nil {
		return err
	}

	return nil
}
