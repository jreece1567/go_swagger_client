package models_core

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

/*DealRetailerLink Retailer name, URL and identifier.

swagger:model dealRetailerLink
*/
type DealRetailerLink struct {

	/* Retailer URL.

	Required: true
	*/
	Href *string `json:"href"`

	/* Retailer name.

	Required: true
	*/
	Name *string `json:"name"`

	/* Retailer identifier.

	Required: true
	*/
	RetailerID *int64 `json:"retailer_id"`
}

// Validate validates this deal retailer link
func (m *DealRetailerLink) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateHref(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateRetailerID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DealRetailerLink) validateHref(formats strfmt.Registry) error {

	if err := validate.Required("href", "body", m.Href); err != nil {
		return err
	}

	return nil
}

func (m *DealRetailerLink) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

func (m *DealRetailerLink) validateRetailerID(formats strfmt.Registry) error {

	if err := validate.Required("retailer_id", "body", m.RetailerID); err != nil {
		return err
	}

	return nil
}
