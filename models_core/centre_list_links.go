package models_core

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

/*CentreListLinks centre list links

swagger:model centreListLinks
*/
type CentreListLinks struct {

	/* URI to obtain dining image

	Required: true
	*/
	DiningImage *GenericLink `json:"dining_image"`

	/* URI to obtain medium-sized dining image

	Required: true
	*/
	DiningImageMedium *GenericLink `json:"dining_image_medium"`

	/* URI to obtain small-sized dining image

	Required: true
	*/
	DiningImageSmall *GenericLink `json:"dining_image_small"`

	/* URI to obtain hero image

	Required: true
	*/
	HeroImage *GenericLink `json:"hero_image"`

	/* URI to obtain this record

	Required: true
	*/
	Self *GenericLink `json:"self"`
}

// Validate validates this centre list links
func (m *CentreListLinks) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDiningImage(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateDiningImageMedium(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateDiningImageSmall(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateHeroImage(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateSelf(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CentreListLinks) validateDiningImage(formats strfmt.Registry) error {

	if err := validate.Required("dining_image", "body", m.DiningImage); err != nil {
		return err
	}

	if m.DiningImage != nil {

		if err := m.DiningImage.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}

func (m *CentreListLinks) validateDiningImageMedium(formats strfmt.Registry) error {

	if err := validate.Required("dining_image_medium", "body", m.DiningImageMedium); err != nil {
		return err
	}

	if m.DiningImageMedium != nil {

		if err := m.DiningImageMedium.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}

func (m *CentreListLinks) validateDiningImageSmall(formats strfmt.Registry) error {

	if err := validate.Required("dining_image_small", "body", m.DiningImageSmall); err != nil {
		return err
	}

	if m.DiningImageSmall != nil {

		if err := m.DiningImageSmall.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}

func (m *CentreListLinks) validateHeroImage(formats strfmt.Registry) error {

	if err := validate.Required("hero_image", "body", m.HeroImage); err != nil {
		return err
	}

	if m.HeroImage != nil {

		if err := m.HeroImage.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}

func (m *CentreListLinks) validateSelf(formats strfmt.Registry) error {

	if err := validate.Required("self", "body", m.Self); err != nil {
		return err
	}

	if m.Self != nil {

		if err := m.Self.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}
