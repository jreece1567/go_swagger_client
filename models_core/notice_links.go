package models_core

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

/*NoticeLinks notice links

swagger:model noticeLinks
*/
type NoticeLinks struct {

	/* URI to attachment ref file

	Required: true
	*/
	Attachment *GenericLink `json:"attachment"`

	/* URI to image ref file

	Required: true
	*/
	Image *GenericLink `json:"image"`

	/* Canonical link to this notice

	Required: true
	*/
	Self *GenericLink `json:"self"`
}

// Validate validates this notice links
func (m *NoticeLinks) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAttachment(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateImage(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateSelf(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *NoticeLinks) validateAttachment(formats strfmt.Registry) error {

	if err := validate.Required("attachment", "body", m.Attachment); err != nil {
		return err
	}

	if m.Attachment != nil {

		if err := m.Attachment.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}

func (m *NoticeLinks) validateImage(formats strfmt.Registry) error {

	if err := validate.Required("image", "body", m.Image); err != nil {
		return err
	}

	if m.Image != nil {

		if err := m.Image.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}

func (m *NoticeLinks) validateSelf(formats strfmt.Registry) error {

	if err := validate.Required("self", "body", m.Self); err != nil {
		return err
	}

	if m.Self != nil {

		if err := m.Self.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}
