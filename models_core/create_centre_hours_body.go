package models_core

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/go-openapi/errors"
)

/*CreateCentreHoursBody Parameters for creating one or more trading hours for a centre.

swagger:model createCentreHoursBody
*/
type CreateCentreHoursBody struct {

	/* Whether the centre is open or not
	 */
	Closed []string `json:"closed,omitempty"`

	/* Time the centre closes
	 */
	ClosingTime []string `json:"closing_time,omitempty"`

	/* Date the trading hour is for
	 */
	Date []string `json:"date,omitempty"`

	/* 0-indexed day of the week (e.g. 0: Mon, 1: Tue)
	 */
	DayOfWeek []int64 `json:"day_of_week,omitempty"`

	/* Descriptions of trading hours
	 */
	Description []string `json:"description,omitempty"`

	/* Types of trading hours
	 */
	HourType []string `json:"hour_type,omitempty"`

	/* Time the centre opens
	 */
	OpeningTime []string `json:"opening_time,omitempty"`
}

// Validate validates this create centre hours body
func (m *CreateCentreHoursBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateClosed(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateClosingTime(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateDate(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateDayOfWeek(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateDescription(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateHourType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateOpeningTime(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CreateCentreHoursBody) validateClosed(formats strfmt.Registry) error {

	if swag.IsZero(m.Closed) { // not required
		return nil
	}

	return nil
}

func (m *CreateCentreHoursBody) validateClosingTime(formats strfmt.Registry) error {

	if swag.IsZero(m.ClosingTime) { // not required
		return nil
	}

	return nil
}

func (m *CreateCentreHoursBody) validateDate(formats strfmt.Registry) error {

	if swag.IsZero(m.Date) { // not required
		return nil
	}

	return nil
}

func (m *CreateCentreHoursBody) validateDayOfWeek(formats strfmt.Registry) error {

	if swag.IsZero(m.DayOfWeek) { // not required
		return nil
	}

	return nil
}

func (m *CreateCentreHoursBody) validateDescription(formats strfmt.Registry) error {

	if swag.IsZero(m.Description) { // not required
		return nil
	}

	return nil
}

func (m *CreateCentreHoursBody) validateHourType(formats strfmt.Registry) error {

	if swag.IsZero(m.HourType) { // not required
		return nil
	}

	return nil
}

func (m *CreateCentreHoursBody) validateOpeningTime(formats strfmt.Registry) error {

	if swag.IsZero(m.OpeningTime) { // not required
		return nil
	}

	return nil
}
