package models_core

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

/*ServiceLinks service links

swagger:model serviceLinks
*/
type ServiceLinks struct {

	/* Canonical link to the centre

	Required: true
	*/
	Centre *CentreLink `json:"centre"`

	/* Link to image

	Required: true
	*/
	Image *GenericLink `json:"image"`

	/* Canonical link to this service

	Required: true
	*/
	Self *GenericLink `json:"self"`
}

// Validate validates this service links
func (m *ServiceLinks) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCentre(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateImage(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateSelf(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ServiceLinks) validateCentre(formats strfmt.Registry) error {

	if err := validate.Required("centre", "body", m.Centre); err != nil {
		return err
	}

	if m.Centre != nil {

		if err := m.Centre.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}

func (m *ServiceLinks) validateImage(formats strfmt.Registry) error {

	if err := validate.Required("image", "body", m.Image); err != nil {
		return err
	}

	if m.Image != nil {

		if err := m.Image.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}

func (m *ServiceLinks) validateSelf(formats strfmt.Registry) error {

	if err := validate.Required("self", "body", m.Self); err != nil {
		return err
	}

	if m.Self != nil {

		if err := m.Self.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}
