package models_core

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

/*DiscountInstance discount instance

swagger:model discountInstance
*/
type DiscountInstance struct {

	/* Centre identifier.
	 */
	CentreID string `json:"centre_id,omitempty"`

	/* Name of discount.
	 */
	DiscountName string `json:"discount_name,omitempty"`

	/* Type of Skidata discount.

	Required: true
	*/
	DiscountType *string `json:"discount_type"`

	/* The discount value in the appropriate units.

	Required: true
	*/
	DiscountValue *string `json:"discount_value"`

	/* Vehicle registration plate.
	 */
	RegistrationNumber string `json:"registration_number,omitempty"`
}

// Validate validates this discount instance
func (m *DiscountInstance) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDiscountType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateDiscountValue(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var discountInstanceTypeDiscountTypePropEnum []interface{}

// prop value enum
func (m *DiscountInstance) validateDiscountTypeEnum(path, location string, value string) error {
	if discountInstanceTypeDiscountTypePropEnum == nil {
		var res []string
		if err := json.Unmarshal([]byte(`["Amount_In_Cents","Flat_Rate","Percentage","Time_In_Minutes"]`), &res); err != nil {
			return err
		}
		for _, v := range res {
			discountInstanceTypeDiscountTypePropEnum = append(discountInstanceTypeDiscountTypePropEnum, v)
		}
	}
	if err := validate.Enum(path, location, value, discountInstanceTypeDiscountTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *DiscountInstance) validateDiscountType(formats strfmt.Registry) error {

	if err := validate.Required("discount_type", "body", m.DiscountType); err != nil {
		return err
	}

	// value enum
	if err := m.validateDiscountTypeEnum("discount_type", "body", *m.DiscountType); err != nil {
		return err
	}

	return nil
}

func (m *DiscountInstance) validateDiscountValue(formats strfmt.Registry) error {

	if err := validate.Required("discount_value", "body", m.DiscountValue); err != nil {
		return err
	}

	return nil
}
