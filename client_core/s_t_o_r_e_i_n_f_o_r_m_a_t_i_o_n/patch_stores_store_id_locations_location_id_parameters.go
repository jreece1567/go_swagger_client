package s_t_o_r_e_i_n_f_o_r_m_a_t_i_o_n

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	"restclient/models_core"
)

// NewPatchStoresStoreIDLocationsLocationIDParams creates a new PatchStoresStoreIDLocationsLocationIDParams object
// with the default values initialized.
func NewPatchStoresStoreIDLocationsLocationIDParams() *PatchStoresStoreIDLocationsLocationIDParams {
	var ()
	return &PatchStoresStoreIDLocationsLocationIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPatchStoresStoreIDLocationsLocationIDParamsWithTimeout creates a new PatchStoresStoreIDLocationsLocationIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPatchStoresStoreIDLocationsLocationIDParamsWithTimeout(timeout time.Duration) *PatchStoresStoreIDLocationsLocationIDParams {
	var ()
	return &PatchStoresStoreIDLocationsLocationIDParams{

		timeout: timeout,
	}
}

/*PatchStoresStoreIDLocationsLocationIDParams contains all the parameters to send to the API endpoint
for the patch stores store ID locations location ID operation typically these are written to a http.Request
*/
type PatchStoresStoreIDLocationsLocationIDParams struct {

	/*Authorization
	  Staff Access token.

	*/
	Authorization string
	/*LocationData
	  Data to update a store location.

	*/
	LocationData *models_core.StoreLocation
	/*LocationID
	  Location identifier. Request to update the store location with location_id.

	*/
	LocationID int64
	/*StoreID
	  Store identifier. Request to update the store location with store_id.

	*/
	StoreID int64

	timeout time.Duration
}

// WithAuthorization adds the authorization to the patch stores store ID locations location ID params
func (o *PatchStoresStoreIDLocationsLocationIDParams) WithAuthorization(Authorization string) *PatchStoresStoreIDLocationsLocationIDParams {
	o.Authorization = Authorization
	return o
}

// WithLocationData adds the locationData to the patch stores store ID locations location ID params
func (o *PatchStoresStoreIDLocationsLocationIDParams) WithLocationData(LocationData *models_core.StoreLocation) *PatchStoresStoreIDLocationsLocationIDParams {
	o.LocationData = LocationData
	return o
}

// WithLocationID adds the locationId to the patch stores store ID locations location ID params
func (o *PatchStoresStoreIDLocationsLocationIDParams) WithLocationID(LocationID int64) *PatchStoresStoreIDLocationsLocationIDParams {
	o.LocationID = LocationID
	return o
}

// WithStoreID adds the storeId to the patch stores store ID locations location ID params
func (o *PatchStoresStoreIDLocationsLocationIDParams) WithStoreID(StoreID int64) *PatchStoresStoreIDLocationsLocationIDParams {
	o.StoreID = StoreID
	return o
}

// WriteToRequest writes these params to a swagger request
func (o *PatchStoresStoreIDLocationsLocationIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	// header param Authorization
	if err := r.SetHeaderParam("Authorization", o.Authorization); err != nil {
		return err
	}

	if o.LocationData == nil {
		o.LocationData = new(models_core.StoreLocation)
	}

	if err := r.SetBodyParam(o.LocationData); err != nil {
		return err
	}

	// path param location_id
	if err := r.SetPathParam("location_id", swag.FormatInt64(o.LocationID)); err != nil {
		return err
	}

	// path param store_id
	if err := r.SetPathParam("store_id", swag.FormatInt64(o.StoreID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
