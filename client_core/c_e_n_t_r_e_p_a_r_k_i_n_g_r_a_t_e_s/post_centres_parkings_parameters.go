package c_e_n_t_r_e_p_a_r_k_i_n_g_r_a_t_e_s

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"restclient/models_core"
)

// NewPostCentresParkingsParams creates a new PostCentresParkingsParams object
// with the default values initialized.
func NewPostCentresParkingsParams() *PostCentresParkingsParams {
	var ()
	return &PostCentresParkingsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostCentresParkingsParamsWithTimeout creates a new PostCentresParkingsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostCentresParkingsParamsWithTimeout(timeout time.Duration) *PostCentresParkingsParams {
	var ()
	return &PostCentresParkingsParams{

		timeout: timeout,
	}
}

/*PostCentresParkingsParams contains all the parameters to send to the API endpoint
for the post centres parkings operation typically these are written to a http.Request
*/
type PostCentresParkingsParams struct {

	/*Authorization
	  Staff Access token.

	*/
	Authorization string
	/*ParkingData
	  Data to create centre parking rates.

	*/
	ParkingData *models_core.ParkingCreateBody

	timeout time.Duration
}

// WithAuthorization adds the authorization to the post centres parkings params
func (o *PostCentresParkingsParams) WithAuthorization(Authorization string) *PostCentresParkingsParams {
	o.Authorization = Authorization
	return o
}

// WithParkingData adds the parkingData to the post centres parkings params
func (o *PostCentresParkingsParams) WithParkingData(ParkingData *models_core.ParkingCreateBody) *PostCentresParkingsParams {
	o.ParkingData = ParkingData
	return o
}

// WriteToRequest writes these params to a swagger request
func (o *PostCentresParkingsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	// header param Authorization
	if err := r.SetHeaderParam("Authorization", o.Authorization); err != nil {
		return err
	}

	if o.ParkingData == nil {
		o.ParkingData = new(models_core.ParkingCreateBody)
	}

	if err := r.SetBodyParam(o.ParkingData); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
