package c_e_n_t_r_e_p_a_r_k_i_n_g_r_a_t_e_s

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetCentresParkingsParkingIDParams creates a new GetCentresParkingsParkingIDParams object
// with the default values initialized.
func NewGetCentresParkingsParkingIDParams() *GetCentresParkingsParkingIDParams {
	var ()
	return &GetCentresParkingsParkingIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetCentresParkingsParkingIDParamsWithTimeout creates a new GetCentresParkingsParkingIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetCentresParkingsParkingIDParamsWithTimeout(timeout time.Duration) *GetCentresParkingsParkingIDParams {
	var ()
	return &GetCentresParkingsParkingIDParams{

		timeout: timeout,
	}
}

/*GetCentresParkingsParkingIDParams contains all the parameters to send to the API endpoint
for the get centres parkings parking ID operation typically these are written to a http.Request
*/
type GetCentresParkingsParkingIDParams struct {

	/*Fields
	  Fields in response. Array that lists the fields requested. If empty or not supplied, all attributes will be returned.

	*/
	Fields []string
	/*ParkingID
	  Parking identifier. Request the centre parking rates with parking_id.

	*/
	ParkingID int64

	timeout time.Duration
}

// WithFields adds the fields to the get centres parkings parking ID params
func (o *GetCentresParkingsParkingIDParams) WithFields(Fields []string) *GetCentresParkingsParkingIDParams {
	o.Fields = Fields
	return o
}

// WithParkingID adds the parkingId to the get centres parkings parking ID params
func (o *GetCentresParkingsParkingIDParams) WithParkingID(ParkingID int64) *GetCentresParkingsParkingIDParams {
	o.ParkingID = ParkingID
	return o
}

// WriteToRequest writes these params to a swagger request
func (o *GetCentresParkingsParkingIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	valuesFields := o.Fields

	joinedFields := swag.JoinByFormat(valuesFields, "csv")
	// query array param fields
	if err := r.SetQueryParam("fields", joinedFields...); err != nil {
		return err
	}

	// path param parking_id
	if err := r.SetPathParam("parking_id", swag.FormatInt64(o.ParkingID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
