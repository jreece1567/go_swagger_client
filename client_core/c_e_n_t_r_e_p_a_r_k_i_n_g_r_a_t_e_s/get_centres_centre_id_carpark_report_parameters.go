package c_e_n_t_r_e_p_a_r_k_i_n_g_r_a_t_e_s

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetCentresCentreIDCarparkReportParams creates a new GetCentresCentreIDCarparkReportParams object
// with the default values initialized.
func NewGetCentresCentreIDCarparkReportParams() *GetCentresCentreIDCarparkReportParams {
	var ()
	return &GetCentresCentreIDCarparkReportParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetCentresCentreIDCarparkReportParamsWithTimeout creates a new GetCentresCentreIDCarparkReportParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetCentresCentreIDCarparkReportParamsWithTimeout(timeout time.Duration) *GetCentresCentreIDCarparkReportParams {
	var ()
	return &GetCentresCentreIDCarparkReportParams{

		timeout: timeout,
	}
}

/*GetCentresCentreIDCarparkReportParams contains all the parameters to send to the API endpoint
for the get centres centre ID carpark report operation typically these are written to a http.Request
*/
type GetCentresCentreIDCarparkReportParams struct {

	/*CentreID
	  Centre identifier. Request the list of reportable carpark discounts at centre_id. Lowercase code name for a specific centre.

	*/
	CentreID string
	/*EndDate
	  Request reportable discounts before a specific date.

	*/
	EndDate *strfmt.Date
	/*StartDate
	  Request reportable discounts since a specific date.

	*/
	StartDate *strfmt.Date

	timeout time.Duration
}

// WithCentreID adds the centreId to the get centres centre ID carpark report params
func (o *GetCentresCentreIDCarparkReportParams) WithCentreID(CentreID string) *GetCentresCentreIDCarparkReportParams {
	o.CentreID = CentreID
	return o
}

// WithEndDate adds the endDate to the get centres centre ID carpark report params
func (o *GetCentresCentreIDCarparkReportParams) WithEndDate(EndDate *strfmt.Date) *GetCentresCentreIDCarparkReportParams {
	o.EndDate = EndDate
	return o
}

// WithStartDate adds the startDate to the get centres centre ID carpark report params
func (o *GetCentresCentreIDCarparkReportParams) WithStartDate(StartDate *strfmt.Date) *GetCentresCentreIDCarparkReportParams {
	o.StartDate = StartDate
	return o
}

// WriteToRequest writes these params to a swagger request
func (o *GetCentresCentreIDCarparkReportParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	// path param centre_id
	if err := r.SetPathParam("centre_id", o.CentreID); err != nil {
		return err
	}

	if o.EndDate != nil {

		// query param end_date
		var qrEndDate strfmt.Date
		if o.EndDate != nil {
			qrEndDate = *o.EndDate
		}
		qEndDate := qrEndDate.String()
		if qEndDate != "" {
			if err := r.SetQueryParam("end_date", qEndDate); err != nil {
				return err
			}
		}

	}

	if o.StartDate != nil {

		// query param start_date
		var qrStartDate strfmt.Date
		if o.StartDate != nil {
			qrStartDate = *o.StartDate
		}
		qStartDate := qrStartDate.String()
		if qStartDate != "" {
			if err := r.SetQueryParam("start_date", qStartDate); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
