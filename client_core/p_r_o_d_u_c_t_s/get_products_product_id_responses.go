package p_r_o_d_u_c_t_s

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"restclient/models_core"
)

// GetProductsProductIDReader is a Reader for the GetProductsProductID structure.
type GetProductsProductIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *GetProductsProductIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetProductsProductIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewGetProductsProductIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetProductsProductIDOK creates a GetProductsProductIDOK with default headers values
func NewGetProductsProductIDOK() *GetProductsProductIDOK {
	return &GetProductsProductIDOK{}
}

/*GetProductsProductIDOK handles this case with default header values.

Successfully retrieved the individual product.
*/
type GetProductsProductIDOK struct {
	Payload *models_core.ProductResponse
}

func (o *GetProductsProductIDOK) Error() string {
	return fmt.Sprintf("[GET /products/{product_id}][%d] getProductsProductIdOK  %+v", 200, o.Payload)
}

func (o *GetProductsProductIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_core.ProductResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProductsProductIDNotFound creates a GetProductsProductIDNotFound with default headers values
func NewGetProductsProductIDNotFound() *GetProductsProductIDNotFound {
	return &GetProductsProductIDNotFound{}
}

/*GetProductsProductIDNotFound handles this case with default header values.

Product not found.
*/
type GetProductsProductIDNotFound struct {
	Payload *models_core.Producthttp404Response
}

func (o *GetProductsProductIDNotFound) Error() string {
	return fmt.Sprintf("[GET /products/{product_id}][%d] getProductsProductIdNotFound  %+v", 404, o.Payload)
}

func (o *GetProductsProductIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_core.Producthttp404Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
