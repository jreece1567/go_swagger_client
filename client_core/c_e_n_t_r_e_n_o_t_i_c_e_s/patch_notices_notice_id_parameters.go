package c_e_n_t_r_e_n_o_t_i_c_e_s

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	"restclient/models_core"
)

// NewPatchNoticesNoticeIDParams creates a new PatchNoticesNoticeIDParams object
// with the default values initialized.
func NewPatchNoticesNoticeIDParams() *PatchNoticesNoticeIDParams {
	var ()
	return &PatchNoticesNoticeIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPatchNoticesNoticeIDParamsWithTimeout creates a new PatchNoticesNoticeIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPatchNoticesNoticeIDParamsWithTimeout(timeout time.Duration) *PatchNoticesNoticeIDParams {
	var ()
	return &PatchNoticesNoticeIDParams{

		timeout: timeout,
	}
}

/*PatchNoticesNoticeIDParams contains all the parameters to send to the API endpoint
for the patch notices notice ID operation typically these are written to a http.Request
*/
type PatchNoticesNoticeIDParams struct {

	/*Authorization
	  Staff Access token.

	*/
	Authorization string
	/*NoticeData
	  Data to update a deal.

	*/
	NoticeData *models_core.NoticeUpdateBody
	/*NoticeID
	  Notice identifier. Update the notice with notice_id.

	*/
	NoticeID int64

	timeout time.Duration
}

// WithAuthorization adds the authorization to the patch notices notice ID params
func (o *PatchNoticesNoticeIDParams) WithAuthorization(Authorization string) *PatchNoticesNoticeIDParams {
	o.Authorization = Authorization
	return o
}

// WithNoticeData adds the noticeData to the patch notices notice ID params
func (o *PatchNoticesNoticeIDParams) WithNoticeData(NoticeData *models_core.NoticeUpdateBody) *PatchNoticesNoticeIDParams {
	o.NoticeData = NoticeData
	return o
}

// WithNoticeID adds the noticeId to the patch notices notice ID params
func (o *PatchNoticesNoticeIDParams) WithNoticeID(NoticeID int64) *PatchNoticesNoticeIDParams {
	o.NoticeID = NoticeID
	return o
}

// WriteToRequest writes these params to a swagger request
func (o *PatchNoticesNoticeIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	// header param Authorization
	if err := r.SetHeaderParam("Authorization", o.Authorization); err != nil {
		return err
	}

	if o.NoticeData == nil {
		o.NoticeData = new(models_core.NoticeUpdateBody)
	}

	if err := r.SetBodyParam(o.NoticeData); err != nil {
		return err
	}

	// path param notice_id
	if err := r.SetPathParam("notice_id", swag.FormatInt64(o.NoticeID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
