package c_e_n_t_r_e_n_o_t_i_c_e_s

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"restclient/models_core"
)

// PatchNoticesNoticeIDReader is a Reader for the PatchNoticesNoticeID structure.
type PatchNoticesNoticeIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *PatchNoticesNoticeIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewPatchNoticesNoticeIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewPatchNoticesNoticeIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPatchNoticesNoticeIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 422:
		result := NewPatchNoticesNoticeIDUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPatchNoticesNoticeIDNoContent creates a PatchNoticesNoticeIDNoContent with default headers values
func NewPatchNoticesNoticeIDNoContent() *PatchNoticesNoticeIDNoContent {
	return &PatchNoticesNoticeIDNoContent{}
}

/*PatchNoticesNoticeIDNoContent handles this case with default header values.

Successfully updated the notice.
*/
type PatchNoticesNoticeIDNoContent struct {
}

func (o *PatchNoticesNoticeIDNoContent) Error() string {
	return fmt.Sprintf("[PATCH /notices/{notice_id}][%d] patchNoticesNoticeIdNoContent ", 204)
}

func (o *PatchNoticesNoticeIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchNoticesNoticeIDUnauthorized creates a PatchNoticesNoticeIDUnauthorized with default headers values
func NewPatchNoticesNoticeIDUnauthorized() *PatchNoticesNoticeIDUnauthorized {
	return &PatchNoticesNoticeIDUnauthorized{}
}

/*PatchNoticesNoticeIDUnauthorized handles this case with default header values.

Unauthorized request.
*/
type PatchNoticesNoticeIDUnauthorized struct {
	Payload *models_core.Http401Response
}

func (o *PatchNoticesNoticeIDUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /notices/{notice_id}][%d] patchNoticesNoticeIdUnauthorized  %+v", 401, o.Payload)
}

func (o *PatchNoticesNoticeIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_core.Http401Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchNoticesNoticeIDNotFound creates a PatchNoticesNoticeIDNotFound with default headers values
func NewPatchNoticesNoticeIDNotFound() *PatchNoticesNoticeIDNotFound {
	return &PatchNoticesNoticeIDNotFound{}
}

/*PatchNoticesNoticeIDNotFound handles this case with default header values.

Notice not found.
*/
type PatchNoticesNoticeIDNotFound struct {
	Payload *models_core.Http404Response
}

func (o *PatchNoticesNoticeIDNotFound) Error() string {
	return fmt.Sprintf("[PATCH /notices/{notice_id}][%d] patchNoticesNoticeIdNotFound  %+v", 404, o.Payload)
}

func (o *PatchNoticesNoticeIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_core.Http404Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchNoticesNoticeIDUnprocessableEntity creates a PatchNoticesNoticeIDUnprocessableEntity with default headers values
func NewPatchNoticesNoticeIDUnprocessableEntity() *PatchNoticesNoticeIDUnprocessableEntity {
	return &PatchNoticesNoticeIDUnprocessableEntity{}
}

/*PatchNoticesNoticeIDUnprocessableEntity handles this case with default header values.

Notice not updated. Returns an array of error messages explaining the problems with the provided attributes.
*/
type PatchNoticesNoticeIDUnprocessableEntity struct {
	Payload *models_core.Notice422Response
}

func (o *PatchNoticesNoticeIDUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PATCH /notices/{notice_id}][%d] patchNoticesNoticeIdUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *PatchNoticesNoticeIDUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_core.Notice422Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
