package k_i_o_s_k

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"restclient/models_core"
)

// PatchKioskKioskCentresKioskCentreIDReader is a Reader for the PatchKioskKioskCentresKioskCentreID structure.
type PatchKioskKioskCentresKioskCentreIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *PatchKioskKioskCentresKioskCentreIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewPatchKioskKioskCentresKioskCentreIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewPatchKioskKioskCentresKioskCentreIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPatchKioskKioskCentresKioskCentreIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 422:
		result := NewPatchKioskKioskCentresKioskCentreIDUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPatchKioskKioskCentresKioskCentreIDNoContent creates a PatchKioskKioskCentresKioskCentreIDNoContent with default headers values
func NewPatchKioskKioskCentresKioskCentreIDNoContent() *PatchKioskKioskCentresKioskCentreIDNoContent {
	return &PatchKioskKioskCentresKioskCentreIDNoContent{}
}

/*PatchKioskKioskCentresKioskCentreIDNoContent handles this case with default header values.

Successfully updated the kiosk centre.
*/
type PatchKioskKioskCentresKioskCentreIDNoContent struct {
}

func (o *PatchKioskKioskCentresKioskCentreIDNoContent) Error() string {
	return fmt.Sprintf("[PATCH /kiosk/kiosk_centres/{kiosk_centre_id}][%d] patchKioskKioskCentresKioskCentreIdNoContent ", 204)
}

func (o *PatchKioskKioskCentresKioskCentreIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchKioskKioskCentresKioskCentreIDUnauthorized creates a PatchKioskKioskCentresKioskCentreIDUnauthorized with default headers values
func NewPatchKioskKioskCentresKioskCentreIDUnauthorized() *PatchKioskKioskCentresKioskCentreIDUnauthorized {
	return &PatchKioskKioskCentresKioskCentreIDUnauthorized{}
}

/*PatchKioskKioskCentresKioskCentreIDUnauthorized handles this case with default header values.

Unauthorized request.
*/
type PatchKioskKioskCentresKioskCentreIDUnauthorized struct {
	Payload *models_core.Http401Response
}

func (o *PatchKioskKioskCentresKioskCentreIDUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /kiosk/kiosk_centres/{kiosk_centre_id}][%d] patchKioskKioskCentresKioskCentreIdUnauthorized  %+v", 401, o.Payload)
}

func (o *PatchKioskKioskCentresKioskCentreIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_core.Http401Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchKioskKioskCentresKioskCentreIDNotFound creates a PatchKioskKioskCentresKioskCentreIDNotFound with default headers values
func NewPatchKioskKioskCentresKioskCentreIDNotFound() *PatchKioskKioskCentresKioskCentreIDNotFound {
	return &PatchKioskKioskCentresKioskCentreIDNotFound{}
}

/*PatchKioskKioskCentresKioskCentreIDNotFound handles this case with default header values.

Kiosk centre not found.
*/
type PatchKioskKioskCentresKioskCentreIDNotFound struct {
	Payload *models_core.Http404Response
}

func (o *PatchKioskKioskCentresKioskCentreIDNotFound) Error() string {
	return fmt.Sprintf("[PATCH /kiosk/kiosk_centres/{kiosk_centre_id}][%d] patchKioskKioskCentresKioskCentreIdNotFound  %+v", 404, o.Payload)
}

func (o *PatchKioskKioskCentresKioskCentreIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_core.Http404Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchKioskKioskCentresKioskCentreIDUnprocessableEntity creates a PatchKioskKioskCentresKioskCentreIDUnprocessableEntity with default headers values
func NewPatchKioskKioskCentresKioskCentreIDUnprocessableEntity() *PatchKioskKioskCentresKioskCentreIDUnprocessableEntity {
	return &PatchKioskKioskCentresKioskCentreIDUnprocessableEntity{}
}

/*PatchKioskKioskCentresKioskCentreIDUnprocessableEntity handles this case with default header values.

Kiosk centre not updated. Returns an array of error messages explaining the problems with the provided attributes.
*/
type PatchKioskKioskCentresKioskCentreIDUnprocessableEntity struct {
	Payload *models_core.KioskCentre422Response
}

func (o *PatchKioskKioskCentresKioskCentreIDUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PATCH /kiosk/kiosk_centres/{kiosk_centre_id}][%d] patchKioskKioskCentresKioskCentreIdUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *PatchKioskKioskCentresKioskCentreIDUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_core.KioskCentre422Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
