package k_i_o_s_k

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"restclient/models_core"
)

// DeleteKioskKioskCentresKioskCentreIDReader is a Reader for the DeleteKioskKioskCentresKioskCentreID structure.
type DeleteKioskKioskCentresKioskCentreIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *DeleteKioskKioskCentresKioskCentreIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewDeleteKioskKioskCentresKioskCentreIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewDeleteKioskKioskCentresKioskCentreIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeleteKioskKioskCentresKioskCentreIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteKioskKioskCentresKioskCentreIDNoContent creates a DeleteKioskKioskCentresKioskCentreIDNoContent with default headers values
func NewDeleteKioskKioskCentresKioskCentreIDNoContent() *DeleteKioskKioskCentresKioskCentreIDNoContent {
	return &DeleteKioskKioskCentresKioskCentreIDNoContent{}
}

/*DeleteKioskKioskCentresKioskCentreIDNoContent handles this case with default header values.

Successfully deleted the kiosk centre.
*/
type DeleteKioskKioskCentresKioskCentreIDNoContent struct {
}

func (o *DeleteKioskKioskCentresKioskCentreIDNoContent) Error() string {
	return fmt.Sprintf("[DELETE /kiosk/kiosk_centres/{kiosk_centre_id}][%d] deleteKioskKioskCentresKioskCentreIdNoContent ", 204)
}

func (o *DeleteKioskKioskCentresKioskCentreIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteKioskKioskCentresKioskCentreIDUnauthorized creates a DeleteKioskKioskCentresKioskCentreIDUnauthorized with default headers values
func NewDeleteKioskKioskCentresKioskCentreIDUnauthorized() *DeleteKioskKioskCentresKioskCentreIDUnauthorized {
	return &DeleteKioskKioskCentresKioskCentreIDUnauthorized{}
}

/*DeleteKioskKioskCentresKioskCentreIDUnauthorized handles this case with default header values.

Unauthorized request.
*/
type DeleteKioskKioskCentresKioskCentreIDUnauthorized struct {
	Payload *models_core.Http401Response
}

func (o *DeleteKioskKioskCentresKioskCentreIDUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /kiosk/kiosk_centres/{kiosk_centre_id}][%d] deleteKioskKioskCentresKioskCentreIdUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteKioskKioskCentresKioskCentreIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_core.Http401Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteKioskKioskCentresKioskCentreIDNotFound creates a DeleteKioskKioskCentresKioskCentreIDNotFound with default headers values
func NewDeleteKioskKioskCentresKioskCentreIDNotFound() *DeleteKioskKioskCentresKioskCentreIDNotFound {
	return &DeleteKioskKioskCentresKioskCentreIDNotFound{}
}

/*DeleteKioskKioskCentresKioskCentreIDNotFound handles this case with default header values.

Kiosk centre not found.
*/
type DeleteKioskKioskCentresKioskCentreIDNotFound struct {
	Payload *models_core.Http404Response
}

func (o *DeleteKioskKioskCentresKioskCentreIDNotFound) Error() string {
	return fmt.Sprintf("[DELETE /kiosk/kiosk_centres/{kiosk_centre_id}][%d] deleteKioskKioskCentresKioskCentreIdNotFound  %+v", 404, o.Payload)
}

func (o *DeleteKioskKioskCentresKioskCentreIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_core.Http404Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
