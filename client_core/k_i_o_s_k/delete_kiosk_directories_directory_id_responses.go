package k_i_o_s_k

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"restclient/models_core"
)

// DeleteKioskDirectoriesDirectoryIDReader is a Reader for the DeleteKioskDirectoriesDirectoryID structure.
type DeleteKioskDirectoriesDirectoryIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *DeleteKioskDirectoriesDirectoryIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewDeleteKioskDirectoriesDirectoryIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewDeleteKioskDirectoriesDirectoryIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeleteKioskDirectoriesDirectoryIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteKioskDirectoriesDirectoryIDNoContent creates a DeleteKioskDirectoriesDirectoryIDNoContent with default headers values
func NewDeleteKioskDirectoriesDirectoryIDNoContent() *DeleteKioskDirectoriesDirectoryIDNoContent {
	return &DeleteKioskDirectoriesDirectoryIDNoContent{}
}

/*DeleteKioskDirectoriesDirectoryIDNoContent handles this case with default header values.

Successfully deleted the directory.
*/
type DeleteKioskDirectoriesDirectoryIDNoContent struct {
}

func (o *DeleteKioskDirectoriesDirectoryIDNoContent) Error() string {
	return fmt.Sprintf("[DELETE /kiosk/directories/{directory_id}][%d] deleteKioskDirectoriesDirectoryIdNoContent ", 204)
}

func (o *DeleteKioskDirectoriesDirectoryIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteKioskDirectoriesDirectoryIDUnauthorized creates a DeleteKioskDirectoriesDirectoryIDUnauthorized with default headers values
func NewDeleteKioskDirectoriesDirectoryIDUnauthorized() *DeleteKioskDirectoriesDirectoryIDUnauthorized {
	return &DeleteKioskDirectoriesDirectoryIDUnauthorized{}
}

/*DeleteKioskDirectoriesDirectoryIDUnauthorized handles this case with default header values.

Unauthorized request.
*/
type DeleteKioskDirectoriesDirectoryIDUnauthorized struct {
	Payload *models_core.Http401Response
}

func (o *DeleteKioskDirectoriesDirectoryIDUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /kiosk/directories/{directory_id}][%d] deleteKioskDirectoriesDirectoryIdUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteKioskDirectoriesDirectoryIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_core.Http401Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteKioskDirectoriesDirectoryIDNotFound creates a DeleteKioskDirectoriesDirectoryIDNotFound with default headers values
func NewDeleteKioskDirectoriesDirectoryIDNotFound() *DeleteKioskDirectoriesDirectoryIDNotFound {
	return &DeleteKioskDirectoriesDirectoryIDNotFound{}
}

/*DeleteKioskDirectoriesDirectoryIDNotFound handles this case with default header values.

Directory not found.
*/
type DeleteKioskDirectoriesDirectoryIDNotFound struct {
	Payload *models_core.Http404Response
}

func (o *DeleteKioskDirectoriesDirectoryIDNotFound) Error() string {
	return fmt.Sprintf("[DELETE /kiosk/directories/{directory_id}][%d] deleteKioskDirectoriesDirectoryIdNotFound  %+v", 404, o.Payload)
}

func (o *DeleteKioskDirectoriesDirectoryIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_core.Http404Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
