package k_i_o_s_k

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"restclient/models_core"
)

// DeleteKioskEnclosuresEnclosureIDReader is a Reader for the DeleteKioskEnclosuresEnclosureID structure.
type DeleteKioskEnclosuresEnclosureIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *DeleteKioskEnclosuresEnclosureIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewDeleteKioskEnclosuresEnclosureIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewDeleteKioskEnclosuresEnclosureIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeleteKioskEnclosuresEnclosureIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteKioskEnclosuresEnclosureIDNoContent creates a DeleteKioskEnclosuresEnclosureIDNoContent with default headers values
func NewDeleteKioskEnclosuresEnclosureIDNoContent() *DeleteKioskEnclosuresEnclosureIDNoContent {
	return &DeleteKioskEnclosuresEnclosureIDNoContent{}
}

/*DeleteKioskEnclosuresEnclosureIDNoContent handles this case with default header values.

Successfully deleted the enclosure.
*/
type DeleteKioskEnclosuresEnclosureIDNoContent struct {
}

func (o *DeleteKioskEnclosuresEnclosureIDNoContent) Error() string {
	return fmt.Sprintf("[DELETE /kiosk/enclosures/{enclosure_id}][%d] deleteKioskEnclosuresEnclosureIdNoContent ", 204)
}

func (o *DeleteKioskEnclosuresEnclosureIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteKioskEnclosuresEnclosureIDUnauthorized creates a DeleteKioskEnclosuresEnclosureIDUnauthorized with default headers values
func NewDeleteKioskEnclosuresEnclosureIDUnauthorized() *DeleteKioskEnclosuresEnclosureIDUnauthorized {
	return &DeleteKioskEnclosuresEnclosureIDUnauthorized{}
}

/*DeleteKioskEnclosuresEnclosureIDUnauthorized handles this case with default header values.

Unauthorized request.
*/
type DeleteKioskEnclosuresEnclosureIDUnauthorized struct {
	Payload *models_core.Http401Response
}

func (o *DeleteKioskEnclosuresEnclosureIDUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /kiosk/enclosures/{enclosure_id}][%d] deleteKioskEnclosuresEnclosureIdUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteKioskEnclosuresEnclosureIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_core.Http401Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteKioskEnclosuresEnclosureIDNotFound creates a DeleteKioskEnclosuresEnclosureIDNotFound with default headers values
func NewDeleteKioskEnclosuresEnclosureIDNotFound() *DeleteKioskEnclosuresEnclosureIDNotFound {
	return &DeleteKioskEnclosuresEnclosureIDNotFound{}
}

/*DeleteKioskEnclosuresEnclosureIDNotFound handles this case with default header values.

Enclosure not found.
*/
type DeleteKioskEnclosuresEnclosureIDNotFound struct {
	Payload *models_core.Http404Response
}

func (o *DeleteKioskEnclosuresEnclosureIDNotFound) Error() string {
	return fmt.Sprintf("[DELETE /kiosk/enclosures/{enclosure_id}][%d] deleteKioskEnclosuresEnclosureIdNotFound  %+v", 404, o.Payload)
}

func (o *DeleteKioskEnclosuresEnclosureIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_core.Http404Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
