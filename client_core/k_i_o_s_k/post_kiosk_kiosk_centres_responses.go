package k_i_o_s_k

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"restclient/models_core"
)

// PostKioskKioskCentresReader is a Reader for the PostKioskKioskCentres structure.
type PostKioskKioskCentresReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *PostKioskKioskCentresReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewPostKioskKioskCentresCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewPostKioskKioskCentresUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 422:
		result := NewPostKioskKioskCentresUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostKioskKioskCentresCreated creates a PostKioskKioskCentresCreated with default headers values
func NewPostKioskKioskCentresCreated() *PostKioskKioskCentresCreated {
	return &PostKioskKioskCentresCreated{}
}

/*PostKioskKioskCentresCreated handles this case with default header values.

Successfully created the kiosk centre.
*/
type PostKioskKioskCentresCreated struct {
	Payload *models_core.KioskCentreResponse
}

func (o *PostKioskKioskCentresCreated) Error() string {
	return fmt.Sprintf("[POST /kiosk/kiosk_centres][%d] postKioskKioskCentresCreated  %+v", 201, o.Payload)
}

func (o *PostKioskKioskCentresCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_core.KioskCentreResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKioskKioskCentresUnauthorized creates a PostKioskKioskCentresUnauthorized with default headers values
func NewPostKioskKioskCentresUnauthorized() *PostKioskKioskCentresUnauthorized {
	return &PostKioskKioskCentresUnauthorized{}
}

/*PostKioskKioskCentresUnauthorized handles this case with default header values.

Unauthorized request.
*/
type PostKioskKioskCentresUnauthorized struct {
	Payload *models_core.Http401Response
}

func (o *PostKioskKioskCentresUnauthorized) Error() string {
	return fmt.Sprintf("[POST /kiosk/kiosk_centres][%d] postKioskKioskCentresUnauthorized  %+v", 401, o.Payload)
}

func (o *PostKioskKioskCentresUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_core.Http401Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostKioskKioskCentresUnprocessableEntity creates a PostKioskKioskCentresUnprocessableEntity with default headers values
func NewPostKioskKioskCentresUnprocessableEntity() *PostKioskKioskCentresUnprocessableEntity {
	return &PostKioskKioskCentresUnprocessableEntity{}
}

/*PostKioskKioskCentresUnprocessableEntity handles this case with default header values.

Kiosk centre not created. Returns an array of error messages explaining the problems with the provided attributes.
*/
type PostKioskKioskCentresUnprocessableEntity struct {
	Payload *models_core.KioskCentre422Response
}

func (o *PostKioskKioskCentresUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /kiosk/kiosk_centres][%d] postKioskKioskCentresUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *PostKioskKioskCentresUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_core.KioskCentre422Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
