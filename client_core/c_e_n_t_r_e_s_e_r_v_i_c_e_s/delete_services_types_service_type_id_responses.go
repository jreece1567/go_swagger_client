package c_e_n_t_r_e_s_e_r_v_i_c_e_s

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"restclient/models_core"
)

// DeleteServicesTypesServiceTypeIDReader is a Reader for the DeleteServicesTypesServiceTypeID structure.
type DeleteServicesTypesServiceTypeIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *DeleteServicesTypesServiceTypeIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewDeleteServicesTypesServiceTypeIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewDeleteServicesTypesServiceTypeIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeleteServicesTypesServiceTypeIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteServicesTypesServiceTypeIDNoContent creates a DeleteServicesTypesServiceTypeIDNoContent with default headers values
func NewDeleteServicesTypesServiceTypeIDNoContent() *DeleteServicesTypesServiceTypeIDNoContent {
	return &DeleteServicesTypesServiceTypeIDNoContent{}
}

/*DeleteServicesTypesServiceTypeIDNoContent handles this case with default header values.

Successfully deleted the service-type.
*/
type DeleteServicesTypesServiceTypeIDNoContent struct {
}

func (o *DeleteServicesTypesServiceTypeIDNoContent) Error() string {
	return fmt.Sprintf("[DELETE /services/types/{service_type_id}][%d] deleteServicesTypesServiceTypeIdNoContent ", 204)
}

func (o *DeleteServicesTypesServiceTypeIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteServicesTypesServiceTypeIDUnauthorized creates a DeleteServicesTypesServiceTypeIDUnauthorized with default headers values
func NewDeleteServicesTypesServiceTypeIDUnauthorized() *DeleteServicesTypesServiceTypeIDUnauthorized {
	return &DeleteServicesTypesServiceTypeIDUnauthorized{}
}

/*DeleteServicesTypesServiceTypeIDUnauthorized handles this case with default header values.

Unauthorized request.
*/
type DeleteServicesTypesServiceTypeIDUnauthorized struct {
	Payload *models_core.Http401Response
}

func (o *DeleteServicesTypesServiceTypeIDUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /services/types/{service_type_id}][%d] deleteServicesTypesServiceTypeIdUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteServicesTypesServiceTypeIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_core.Http401Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteServicesTypesServiceTypeIDNotFound creates a DeleteServicesTypesServiceTypeIDNotFound with default headers values
func NewDeleteServicesTypesServiceTypeIDNotFound() *DeleteServicesTypesServiceTypeIDNotFound {
	return &DeleteServicesTypesServiceTypeIDNotFound{}
}

/*DeleteServicesTypesServiceTypeIDNotFound handles this case with default header values.

Service-type not found.
*/
type DeleteServicesTypesServiceTypeIDNotFound struct {
	Payload *models_core.Http404Response
}

func (o *DeleteServicesTypesServiceTypeIDNotFound) Error() string {
	return fmt.Sprintf("[DELETE /services/types/{service_type_id}][%d] deleteServicesTypesServiceTypeIdNotFound  %+v", 404, o.Payload)
}

func (o *DeleteServicesTypesServiceTypeIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_core.Http404Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
