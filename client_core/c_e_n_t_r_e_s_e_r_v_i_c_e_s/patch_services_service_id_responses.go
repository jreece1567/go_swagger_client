package c_e_n_t_r_e_s_e_r_v_i_c_e_s

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"restclient/models_core"
)

// PatchServicesServiceIDReader is a Reader for the PatchServicesServiceID structure.
type PatchServicesServiceIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *PatchServicesServiceIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewPatchServicesServiceIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewPatchServicesServiceIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPatchServicesServiceIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 422:
		result := NewPatchServicesServiceIDUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPatchServicesServiceIDNoContent creates a PatchServicesServiceIDNoContent with default headers values
func NewPatchServicesServiceIDNoContent() *PatchServicesServiceIDNoContent {
	return &PatchServicesServiceIDNoContent{}
}

/*PatchServicesServiceIDNoContent handles this case with default header values.

Successfully updated the service.
*/
type PatchServicesServiceIDNoContent struct {
}

func (o *PatchServicesServiceIDNoContent) Error() string {
	return fmt.Sprintf("[PATCH /services/{service_id}][%d] patchServicesServiceIdNoContent ", 204)
}

func (o *PatchServicesServiceIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchServicesServiceIDUnauthorized creates a PatchServicesServiceIDUnauthorized with default headers values
func NewPatchServicesServiceIDUnauthorized() *PatchServicesServiceIDUnauthorized {
	return &PatchServicesServiceIDUnauthorized{}
}

/*PatchServicesServiceIDUnauthorized handles this case with default header values.

Unauthorized request.
*/
type PatchServicesServiceIDUnauthorized struct {
	Payload *models_core.Http401Response
}

func (o *PatchServicesServiceIDUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /services/{service_id}][%d] patchServicesServiceIdUnauthorized  %+v", 401, o.Payload)
}

func (o *PatchServicesServiceIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_core.Http401Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchServicesServiceIDNotFound creates a PatchServicesServiceIDNotFound with default headers values
func NewPatchServicesServiceIDNotFound() *PatchServicesServiceIDNotFound {
	return &PatchServicesServiceIDNotFound{}
}

/*PatchServicesServiceIDNotFound handles this case with default header values.

Service not found.
*/
type PatchServicesServiceIDNotFound struct {
	Payload *models_core.Http404Response
}

func (o *PatchServicesServiceIDNotFound) Error() string {
	return fmt.Sprintf("[PATCH /services/{service_id}][%d] patchServicesServiceIdNotFound  %+v", 404, o.Payload)
}

func (o *PatchServicesServiceIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_core.Http404Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchServicesServiceIDUnprocessableEntity creates a PatchServicesServiceIDUnprocessableEntity with default headers values
func NewPatchServicesServiceIDUnprocessableEntity() *PatchServicesServiceIDUnprocessableEntity {
	return &PatchServicesServiceIDUnprocessableEntity{}
}

/*PatchServicesServiceIDUnprocessableEntity handles this case with default header values.

Service not updated. Returns an array of error messages explaining the problems with the provided attributes.
*/
type PatchServicesServiceIDUnprocessableEntity struct {
	Payload *models_core.Service422Response
}

func (o *PatchServicesServiceIDUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PATCH /services/{service_id}][%d] patchServicesServiceIdUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *PatchServicesServiceIDUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_core.Service422Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
