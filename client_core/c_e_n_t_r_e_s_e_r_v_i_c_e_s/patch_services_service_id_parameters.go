package c_e_n_t_r_e_s_e_r_v_i_c_e_s

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	"restclient/models_core"
)

// NewPatchServicesServiceIDParams creates a new PatchServicesServiceIDParams object
// with the default values initialized.
func NewPatchServicesServiceIDParams() *PatchServicesServiceIDParams {
	var ()
	return &PatchServicesServiceIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPatchServicesServiceIDParamsWithTimeout creates a new PatchServicesServiceIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPatchServicesServiceIDParamsWithTimeout(timeout time.Duration) *PatchServicesServiceIDParams {
	var ()
	return &PatchServicesServiceIDParams{

		timeout: timeout,
	}
}

/*PatchServicesServiceIDParams contains all the parameters to send to the API endpoint
for the patch services service ID operation typically these are written to a http.Request
*/
type PatchServicesServiceIDParams struct {

	/*Authorization
	  Staff Access token.

	*/
	Authorization string
	/*ServiceData
	  Data to update a service.

	*/
	ServiceData *models_core.ServiceUpdateBody
	/*ServiceID
	  Service identifier. Request the service with service_id.

	*/
	ServiceID int64

	timeout time.Duration
}

// WithAuthorization adds the authorization to the patch services service ID params
func (o *PatchServicesServiceIDParams) WithAuthorization(Authorization string) *PatchServicesServiceIDParams {
	o.Authorization = Authorization
	return o
}

// WithServiceData adds the serviceData to the patch services service ID params
func (o *PatchServicesServiceIDParams) WithServiceData(ServiceData *models_core.ServiceUpdateBody) *PatchServicesServiceIDParams {
	o.ServiceData = ServiceData
	return o
}

// WithServiceID adds the serviceId to the patch services service ID params
func (o *PatchServicesServiceIDParams) WithServiceID(ServiceID int64) *PatchServicesServiceIDParams {
	o.ServiceID = ServiceID
	return o
}

// WriteToRequest writes these params to a swagger request
func (o *PatchServicesServiceIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	// header param Authorization
	if err := r.SetHeaderParam("Authorization", o.Authorization); err != nil {
		return err
	}

	if o.ServiceData == nil {
		o.ServiceData = new(models_core.ServiceUpdateBody)
	}

	if err := r.SetBodyParam(o.ServiceData); err != nil {
		return err
	}

	// path param service_id
	if err := r.SetPathParam("service_id", swag.FormatInt64(o.ServiceID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
