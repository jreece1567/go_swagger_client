package c_e_n_t_r_e_s_e_r_v_i_c_e_s

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"restclient/models_core"
)

// PatchServicesTypesServiceTypeIDReader is a Reader for the PatchServicesTypesServiceTypeID structure.
type PatchServicesTypesServiceTypeIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *PatchServicesTypesServiceTypeIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewPatchServicesTypesServiceTypeIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewPatchServicesTypesServiceTypeIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPatchServicesTypesServiceTypeIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 422:
		result := NewPatchServicesTypesServiceTypeIDUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPatchServicesTypesServiceTypeIDNoContent creates a PatchServicesTypesServiceTypeIDNoContent with default headers values
func NewPatchServicesTypesServiceTypeIDNoContent() *PatchServicesTypesServiceTypeIDNoContent {
	return &PatchServicesTypesServiceTypeIDNoContent{}
}

/*PatchServicesTypesServiceTypeIDNoContent handles this case with default header values.

Successfully updated the service-type.
*/
type PatchServicesTypesServiceTypeIDNoContent struct {
}

func (o *PatchServicesTypesServiceTypeIDNoContent) Error() string {
	return fmt.Sprintf("[PATCH /services/types/{service_type_id}][%d] patchServicesTypesServiceTypeIdNoContent ", 204)
}

func (o *PatchServicesTypesServiceTypeIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchServicesTypesServiceTypeIDUnauthorized creates a PatchServicesTypesServiceTypeIDUnauthorized with default headers values
func NewPatchServicesTypesServiceTypeIDUnauthorized() *PatchServicesTypesServiceTypeIDUnauthorized {
	return &PatchServicesTypesServiceTypeIDUnauthorized{}
}

/*PatchServicesTypesServiceTypeIDUnauthorized handles this case with default header values.

Unauthorized request.
*/
type PatchServicesTypesServiceTypeIDUnauthorized struct {
	Payload *models_core.Http401Response
}

func (o *PatchServicesTypesServiceTypeIDUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /services/types/{service_type_id}][%d] patchServicesTypesServiceTypeIdUnauthorized  %+v", 401, o.Payload)
}

func (o *PatchServicesTypesServiceTypeIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_core.Http401Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchServicesTypesServiceTypeIDNotFound creates a PatchServicesTypesServiceTypeIDNotFound with default headers values
func NewPatchServicesTypesServiceTypeIDNotFound() *PatchServicesTypesServiceTypeIDNotFound {
	return &PatchServicesTypesServiceTypeIDNotFound{}
}

/*PatchServicesTypesServiceTypeIDNotFound handles this case with default header values.

Service-type not found.
*/
type PatchServicesTypesServiceTypeIDNotFound struct {
	Payload *models_core.Http404Response
}

func (o *PatchServicesTypesServiceTypeIDNotFound) Error() string {
	return fmt.Sprintf("[PATCH /services/types/{service_type_id}][%d] patchServicesTypesServiceTypeIdNotFound  %+v", 404, o.Payload)
}

func (o *PatchServicesTypesServiceTypeIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_core.Http404Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchServicesTypesServiceTypeIDUnprocessableEntity creates a PatchServicesTypesServiceTypeIDUnprocessableEntity with default headers values
func NewPatchServicesTypesServiceTypeIDUnprocessableEntity() *PatchServicesTypesServiceTypeIDUnprocessableEntity {
	return &PatchServicesTypesServiceTypeIDUnprocessableEntity{}
}

/*PatchServicesTypesServiceTypeIDUnprocessableEntity handles this case with default header values.

Service-type not updated. Returns an array of error messages explaining the problems with the provided attributes.
*/
type PatchServicesTypesServiceTypeIDUnprocessableEntity struct {
	Payload *models_core.ServiceType422Response
}

func (o *PatchServicesTypesServiceTypeIDUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PATCH /services/types/{service_type_id}][%d] patchServicesTypesServiceTypeIdUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *PatchServicesTypesServiceTypeIDUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_core.ServiceType422Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
