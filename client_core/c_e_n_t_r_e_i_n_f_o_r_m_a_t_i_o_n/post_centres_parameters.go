package c_e_n_t_r_e_i_n_f_o_r_m_a_t_i_o_n

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"restclient/models_core"
)

// NewPostCentresParams creates a new PostCentresParams object
// with the default values initialized.
func NewPostCentresParams() *PostCentresParams {
	var ()
	return &PostCentresParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostCentresParamsWithTimeout creates a new PostCentresParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostCentresParamsWithTimeout(timeout time.Duration) *PostCentresParams {
	var ()
	return &PostCentresParams{

		timeout: timeout,
	}
}

/*PostCentresParams contains all the parameters to send to the API endpoint
for the post centres operation typically these are written to a http.Request
*/
type PostCentresParams struct {

	/*Authorization
	  Staff Access token.

	*/
	Authorization string
	/*CentreData
	  Data to create a centre.

	*/
	CentreData *models_core.CentreCreateBody

	timeout time.Duration
}

// WithAuthorization adds the authorization to the post centres params
func (o *PostCentresParams) WithAuthorization(Authorization string) *PostCentresParams {
	o.Authorization = Authorization
	return o
}

// WithCentreData adds the centreData to the post centres params
func (o *PostCentresParams) WithCentreData(CentreData *models_core.CentreCreateBody) *PostCentresParams {
	o.CentreData = CentreData
	return o
}

// WriteToRequest writes these params to a swagger request
func (o *PostCentresParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	// header param Authorization
	if err := r.SetHeaderParam("Authorization", o.Authorization); err != nil {
		return err
	}

	if o.CentreData == nil {
		o.CentreData = new(models_core.CentreCreateBody)
	}

	if err := r.SetBodyParam(o.CentreData); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
