package c_e_n_t_r_e_i_n_f_o_r_m_a_t_i_o_n

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"restclient/models_core"
)

// GetCentresNewslettersReader is a Reader for the GetCentresNewsletters structure.
type GetCentresNewslettersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *GetCentresNewslettersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCentresNewslettersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCentresNewslettersOK creates a GetCentresNewslettersOK with default headers values
func NewGetCentresNewslettersOK() *GetCentresNewslettersOK {
	return &GetCentresNewslettersOK{}
}

/*GetCentresNewslettersOK handles this case with default header values.

Successfully retrieved the list of newsletters.
*/
type GetCentresNewslettersOK struct {
	Payload *models_core.NewslettersListResponse
}

func (o *GetCentresNewslettersOK) Error() string {
	return fmt.Sprintf("[GET /centres/newsletters][%d] getCentresNewslettersOK  %+v", 200, o.Payload)
}

func (o *GetCentresNewslettersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_core.NewslettersListResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
