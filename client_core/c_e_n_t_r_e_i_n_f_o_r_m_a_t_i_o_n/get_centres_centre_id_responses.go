package c_e_n_t_r_e_i_n_f_o_r_m_a_t_i_o_n

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"restclient/models_core"
)

// GetCentresCentreIDReader is a Reader for the GetCentresCentreID structure.
type GetCentresCentreIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *GetCentresCentreIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCentresCentreIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewGetCentresCentreIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCentresCentreIDOK creates a GetCentresCentreIDOK with default headers values
func NewGetCentresCentreIDOK() *GetCentresCentreIDOK {
	return &GetCentresCentreIDOK{}
}

/*GetCentresCentreIDOK handles this case with default header values.

Successfully retrieved the individual centre.
*/
type GetCentresCentreIDOK struct {
	Payload *models_core.CentreResponse
}

func (o *GetCentresCentreIDOK) Error() string {
	return fmt.Sprintf("[GET /centres/{centre_id}][%d] getCentresCentreIdOK  %+v", 200, o.Payload)
}

func (o *GetCentresCentreIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_core.CentreResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCentresCentreIDNotFound creates a GetCentresCentreIDNotFound with default headers values
func NewGetCentresCentreIDNotFound() *GetCentresCentreIDNotFound {
	return &GetCentresCentreIDNotFound{}
}

/*GetCentresCentreIDNotFound handles this case with default header values.

Centre not found.
*/
type GetCentresCentreIDNotFound struct {
	Payload *models_core.Http404Response
}

func (o *GetCentresCentreIDNotFound) Error() string {
	return fmt.Sprintf("[GET /centres/{centre_id}][%d] getCentresCentreIdNotFound  %+v", 404, o.Payload)
}

func (o *GetCentresCentreIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_core.Http404Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
