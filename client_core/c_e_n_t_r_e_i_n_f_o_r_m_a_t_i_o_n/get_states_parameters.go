package c_e_n_t_r_e_i_n_f_o_r_m_a_t_i_o_n

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetStatesParams creates a new GetStatesParams object
// with the default values initialized.
func NewGetStatesParams() *GetStatesParams {
	var ()
	return &GetStatesParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetStatesParamsWithTimeout creates a new GetStatesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetStatesParamsWithTimeout(timeout time.Duration) *GetStatesParams {
	var ()
	return &GetStatesParams{

		timeout: timeout,
	}
}

/*GetStatesParams contains all the parameters to send to the API endpoint
for the get states operation typically these are written to a http.Request
*/
type GetStatesParams struct {

	/*Country
	  Country code. Request states with country code. Lowercase two-character code for country.

	*/
	Country *string

	timeout time.Duration
}

// WithCountry adds the country to the get states params
func (o *GetStatesParams) WithCountry(Country *string) *GetStatesParams {
	o.Country = Country
	return o
}

// WriteToRequest writes these params to a swagger request
func (o *GetStatesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	if o.Country != nil {

		// query param country
		var qrCountry string
		if o.Country != nil {
			qrCountry = *o.Country
		}
		qCountry := qrCountry
		if qCountry != "" {
			if err := r.SetQueryParam("country", qCountry); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
