package d_e_a_l_s

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetDealsDealIDCommentsParams creates a new GetDealsDealIDCommentsParams object
// with the default values initialized.
func NewGetDealsDealIDCommentsParams() *GetDealsDealIDCommentsParams {
	var ()
	return &GetDealsDealIDCommentsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetDealsDealIDCommentsParamsWithTimeout creates a new GetDealsDealIDCommentsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetDealsDealIDCommentsParamsWithTimeout(timeout time.Duration) *GetDealsDealIDCommentsParams {
	var ()
	return &GetDealsDealIDCommentsParams{

		timeout: timeout,
	}
}

/*GetDealsDealIDCommentsParams contains all the parameters to send to the API endpoint
for the get deals deal ID comments operation typically these are written to a http.Request
*/
type GetDealsDealIDCommentsParams struct {

	/*DealID
	  Deal identifier. Request the deal with deal_id.

	*/
	DealID int64
	/*Fields
	  Fields in response. Array that lists the fields requested. If empty or not supplied, all attributes will be returned.

	*/
	Fields []string

	timeout time.Duration
}

// WithDealID adds the dealId to the get deals deal ID comments params
func (o *GetDealsDealIDCommentsParams) WithDealID(DealID int64) *GetDealsDealIDCommentsParams {
	o.DealID = DealID
	return o
}

// WithFields adds the fields to the get deals deal ID comments params
func (o *GetDealsDealIDCommentsParams) WithFields(Fields []string) *GetDealsDealIDCommentsParams {
	o.Fields = Fields
	return o
}

// WriteToRequest writes these params to a swagger request
func (o *GetDealsDealIDCommentsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	// path param deal_id
	if err := r.SetPathParam("deal_id", swag.FormatInt64(o.DealID)); err != nil {
		return err
	}

	valuesFields := o.Fields

	joinedFields := swag.JoinByFormat(valuesFields, "csv")
	// query array param fields
	if err := r.SetQueryParam("fields", joinedFields...); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
