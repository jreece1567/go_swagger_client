package d_e_a_l_s

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	"restclient/models_core"
)

// NewPatchDealsDealIDParams creates a new PatchDealsDealIDParams object
// with the default values initialized.
func NewPatchDealsDealIDParams() *PatchDealsDealIDParams {
	var ()
	return &PatchDealsDealIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPatchDealsDealIDParamsWithTimeout creates a new PatchDealsDealIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPatchDealsDealIDParamsWithTimeout(timeout time.Duration) *PatchDealsDealIDParams {
	var ()
	return &PatchDealsDealIDParams{

		timeout: timeout,
	}
}

/*PatchDealsDealIDParams contains all the parameters to send to the API endpoint
for the patch deals deal ID operation typically these are written to a http.Request
*/
type PatchDealsDealIDParams struct {

	/*Authorization
	  Staff Access token.

	*/
	Authorization string
	/*DealData
	  Data to update a deal.

	*/
	DealData *models_core.DealUpdateBody
	/*DealID
	  Deal identifier. Request to update the deal with deal_id.

	*/
	DealID int64

	timeout time.Duration
}

// WithAuthorization adds the authorization to the patch deals deal ID params
func (o *PatchDealsDealIDParams) WithAuthorization(Authorization string) *PatchDealsDealIDParams {
	o.Authorization = Authorization
	return o
}

// WithDealData adds the dealData to the patch deals deal ID params
func (o *PatchDealsDealIDParams) WithDealData(DealData *models_core.DealUpdateBody) *PatchDealsDealIDParams {
	o.DealData = DealData
	return o
}

// WithDealID adds the dealId to the patch deals deal ID params
func (o *PatchDealsDealIDParams) WithDealID(DealID int64) *PatchDealsDealIDParams {
	o.DealID = DealID
	return o
}

// WriteToRequest writes these params to a swagger request
func (o *PatchDealsDealIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	// header param Authorization
	if err := r.SetHeaderParam("Authorization", o.Authorization); err != nil {
		return err
	}

	if o.DealData == nil {
		o.DealData = new(models_core.DealUpdateBody)
	}

	if err := r.SetBodyParam(o.DealData); err != nil {
		return err
	}

	// path param deal_id
	if err := r.SetPathParam("deal_id", swag.FormatInt64(o.DealID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
