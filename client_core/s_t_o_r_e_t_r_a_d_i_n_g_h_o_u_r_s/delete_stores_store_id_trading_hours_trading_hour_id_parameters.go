package s_t_o_r_e_t_r_a_d_i_n_g_h_o_u_r_s

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDeleteStoresStoreIDTradingHoursTradingHourIDParams creates a new DeleteStoresStoreIDTradingHoursTradingHourIDParams object
// with the default values initialized.
func NewDeleteStoresStoreIDTradingHoursTradingHourIDParams() *DeleteStoresStoreIDTradingHoursTradingHourIDParams {
	var ()
	return &DeleteStoresStoreIDTradingHoursTradingHourIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteStoresStoreIDTradingHoursTradingHourIDParamsWithTimeout creates a new DeleteStoresStoreIDTradingHoursTradingHourIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteStoresStoreIDTradingHoursTradingHourIDParamsWithTimeout(timeout time.Duration) *DeleteStoresStoreIDTradingHoursTradingHourIDParams {
	var ()
	return &DeleteStoresStoreIDTradingHoursTradingHourIDParams{

		timeout: timeout,
	}
}

/*DeleteStoresStoreIDTradingHoursTradingHourIDParams contains all the parameters to send to the API endpoint
for the delete stores store ID trading hours trading hour ID operation typically these are written to a http.Request
*/
type DeleteStoresStoreIDTradingHoursTradingHourIDParams struct {

	/*Authorization
	  Staff Access token.

	*/
	Authorization string
	/*CentreID
	  Centre identifier. Request the store trading-hours with centre_id. Lowercase code name for a specific centre.

	*/
	CentreID string
	/*StoreID
	  Store identifier. Request to delete the store trading-hours with store_id.

	*/
	StoreID int64
	/*TradingHourID
	  Trading hour identifier. Request to delete the store trading-hours with trading_hour_id. Must relate to store_id.

	*/
	TradingHourID int64

	timeout time.Duration
}

// WithAuthorization adds the authorization to the delete stores store ID trading hours trading hour ID params
func (o *DeleteStoresStoreIDTradingHoursTradingHourIDParams) WithAuthorization(Authorization string) *DeleteStoresStoreIDTradingHoursTradingHourIDParams {
	o.Authorization = Authorization
	return o
}

// WithCentreID adds the centreId to the delete stores store ID trading hours trading hour ID params
func (o *DeleteStoresStoreIDTradingHoursTradingHourIDParams) WithCentreID(CentreID string) *DeleteStoresStoreIDTradingHoursTradingHourIDParams {
	o.CentreID = CentreID
	return o
}

// WithStoreID adds the storeId to the delete stores store ID trading hours trading hour ID params
func (o *DeleteStoresStoreIDTradingHoursTradingHourIDParams) WithStoreID(StoreID int64) *DeleteStoresStoreIDTradingHoursTradingHourIDParams {
	o.StoreID = StoreID
	return o
}

// WithTradingHourID adds the tradingHourId to the delete stores store ID trading hours trading hour ID params
func (o *DeleteStoresStoreIDTradingHoursTradingHourIDParams) WithTradingHourID(TradingHourID int64) *DeleteStoresStoreIDTradingHoursTradingHourIDParams {
	o.TradingHourID = TradingHourID
	return o
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteStoresStoreIDTradingHoursTradingHourIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	// header param Authorization
	if err := r.SetHeaderParam("Authorization", o.Authorization); err != nil {
		return err
	}

	// query param centre_id
	qrCentreID := o.CentreID
	qCentreID := qrCentreID
	if qCentreID != "" {
		if err := r.SetQueryParam("centre_id", qCentreID); err != nil {
			return err
		}
	}

	// path param store_id
	if err := r.SetPathParam("store_id", swag.FormatInt64(o.StoreID)); err != nil {
		return err
	}

	// path param trading_hour_id
	if err := r.SetPathParam("trading_hour_id", swag.FormatInt64(o.TradingHourID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
