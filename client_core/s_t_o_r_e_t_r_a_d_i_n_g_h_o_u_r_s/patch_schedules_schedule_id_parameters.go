package s_t_o_r_e_t_r_a_d_i_n_g_h_o_u_r_s

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	"restclient/models_core"
)

// NewPatchSchedulesScheduleIDParams creates a new PatchSchedulesScheduleIDParams object
// with the default values initialized.
func NewPatchSchedulesScheduleIDParams() *PatchSchedulesScheduleIDParams {
	var ()
	return &PatchSchedulesScheduleIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPatchSchedulesScheduleIDParamsWithTimeout creates a new PatchSchedulesScheduleIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPatchSchedulesScheduleIDParamsWithTimeout(timeout time.Duration) *PatchSchedulesScheduleIDParams {
	var ()
	return &PatchSchedulesScheduleIDParams{

		timeout: timeout,
	}
}

/*PatchSchedulesScheduleIDParams contains all the parameters to send to the API endpoint
for the patch schedules schedule ID operation typically these are written to a http.Request
*/
type PatchSchedulesScheduleIDParams struct {

	/*Authorization
	  Staff Access token.

	*/
	Authorization string
	/*ScheduleData
	  Data to update a schedule.

	*/
	ScheduleData *models_core.ScheduleUpdateBody
	/*ScheduleID
	  Schedule identifier. Request to update the schedule with schedule_id.

	*/
	ScheduleID int64

	timeout time.Duration
}

// WithAuthorization adds the authorization to the patch schedules schedule ID params
func (o *PatchSchedulesScheduleIDParams) WithAuthorization(Authorization string) *PatchSchedulesScheduleIDParams {
	o.Authorization = Authorization
	return o
}

// WithScheduleData adds the scheduleData to the patch schedules schedule ID params
func (o *PatchSchedulesScheduleIDParams) WithScheduleData(ScheduleData *models_core.ScheduleUpdateBody) *PatchSchedulesScheduleIDParams {
	o.ScheduleData = ScheduleData
	return o
}

// WithScheduleID adds the scheduleId to the patch schedules schedule ID params
func (o *PatchSchedulesScheduleIDParams) WithScheduleID(ScheduleID int64) *PatchSchedulesScheduleIDParams {
	o.ScheduleID = ScheduleID
	return o
}

// WriteToRequest writes these params to a swagger request
func (o *PatchSchedulesScheduleIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	// header param Authorization
	if err := r.SetHeaderParam("Authorization", o.Authorization); err != nil {
		return err
	}

	if o.ScheduleData == nil {
		o.ScheduleData = new(models_core.ScheduleUpdateBody)
	}

	if err := r.SetBodyParam(o.ScheduleData); err != nil {
		return err
	}

	// path param schedule_id
	if err := r.SetPathParam("schedule_id", swag.FormatInt64(o.ScheduleID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
