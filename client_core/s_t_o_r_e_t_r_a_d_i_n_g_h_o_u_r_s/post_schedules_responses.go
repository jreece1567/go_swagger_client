package s_t_o_r_e_t_r_a_d_i_n_g_h_o_u_r_s

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"restclient/models_core"
)

// PostSchedulesReader is a Reader for the PostSchedules structure.
type PostSchedulesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *PostSchedulesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewPostSchedulesCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewPostSchedulesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 422:
		result := NewPostSchedulesUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostSchedulesCreated creates a PostSchedulesCreated with default headers values
func NewPostSchedulesCreated() *PostSchedulesCreated {
	return &PostSchedulesCreated{}
}

/*PostSchedulesCreated handles this case with default header values.

Successfully created a schedule.
*/
type PostSchedulesCreated struct {
	/*URI of created schedule.
	 */
	Location string

	Payload *models_core.ScheduleInstanceResponse
}

func (o *PostSchedulesCreated) Error() string {
	return fmt.Sprintf("[POST /schedules][%d] postSchedulesCreated  %+v", 201, o.Payload)
}

func (o *PostSchedulesCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header location
	o.Location = response.GetHeader("location")

	o.Payload = new(models_core.ScheduleInstanceResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSchedulesUnauthorized creates a PostSchedulesUnauthorized with default headers values
func NewPostSchedulesUnauthorized() *PostSchedulesUnauthorized {
	return &PostSchedulesUnauthorized{}
}

/*PostSchedulesUnauthorized handles this case with default header values.

Unauthorized request.
*/
type PostSchedulesUnauthorized struct {
	Payload *models_core.Http401Response
}

func (o *PostSchedulesUnauthorized) Error() string {
	return fmt.Sprintf("[POST /schedules][%d] postSchedulesUnauthorized  %+v", 401, o.Payload)
}

func (o *PostSchedulesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_core.Http401Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSchedulesUnprocessableEntity creates a PostSchedulesUnprocessableEntity with default headers values
func NewPostSchedulesUnprocessableEntity() *PostSchedulesUnprocessableEntity {
	return &PostSchedulesUnprocessableEntity{}
}

/*PostSchedulesUnprocessableEntity handles this case with default header values.

Schedule not created. Returns an array of error messages explaining the problems with the provided attributes.
*/
type PostSchedulesUnprocessableEntity struct {
	Payload *models_core.Schedule422Response
}

func (o *PostSchedulesUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /schedules][%d] postSchedulesUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *PostSchedulesUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_core.Schedule422Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
