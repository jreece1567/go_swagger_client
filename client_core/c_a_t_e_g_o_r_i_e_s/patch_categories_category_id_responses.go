package c_a_t_e_g_o_r_i_e_s

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"restclient/models_core"
)

// PatchCategoriesCategoryIDReader is a Reader for the PatchCategoriesCategoryID structure.
type PatchCategoriesCategoryIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *PatchCategoriesCategoryIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewPatchCategoriesCategoryIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewPatchCategoriesCategoryIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPatchCategoriesCategoryIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 422:
		result := NewPatchCategoriesCategoryIDUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPatchCategoriesCategoryIDNoContent creates a PatchCategoriesCategoryIDNoContent with default headers values
func NewPatchCategoriesCategoryIDNoContent() *PatchCategoriesCategoryIDNoContent {
	return &PatchCategoriesCategoryIDNoContent{}
}

/*PatchCategoriesCategoryIDNoContent handles this case with default header values.

Successfully updated the category.
*/
type PatchCategoriesCategoryIDNoContent struct {
}

func (o *PatchCategoriesCategoryIDNoContent) Error() string {
	return fmt.Sprintf("[PATCH /categories/{category_id}][%d] patchCategoriesCategoryIdNoContent ", 204)
}

func (o *PatchCategoriesCategoryIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchCategoriesCategoryIDUnauthorized creates a PatchCategoriesCategoryIDUnauthorized with default headers values
func NewPatchCategoriesCategoryIDUnauthorized() *PatchCategoriesCategoryIDUnauthorized {
	return &PatchCategoriesCategoryIDUnauthorized{}
}

/*PatchCategoriesCategoryIDUnauthorized handles this case with default header values.

Unauthorized request.
*/
type PatchCategoriesCategoryIDUnauthorized struct {
	Payload *models_core.Http401Response
}

func (o *PatchCategoriesCategoryIDUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /categories/{category_id}][%d] patchCategoriesCategoryIdUnauthorized  %+v", 401, o.Payload)
}

func (o *PatchCategoriesCategoryIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_core.Http401Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchCategoriesCategoryIDNotFound creates a PatchCategoriesCategoryIDNotFound with default headers values
func NewPatchCategoriesCategoryIDNotFound() *PatchCategoriesCategoryIDNotFound {
	return &PatchCategoriesCategoryIDNotFound{}
}

/*PatchCategoriesCategoryIDNotFound handles this case with default header values.

Category not found.
*/
type PatchCategoriesCategoryIDNotFound struct {
	Payload *models_core.Http404Response
}

func (o *PatchCategoriesCategoryIDNotFound) Error() string {
	return fmt.Sprintf("[PATCH /categories/{category_id}][%d] patchCategoriesCategoryIdNotFound  %+v", 404, o.Payload)
}

func (o *PatchCategoriesCategoryIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_core.Http404Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchCategoriesCategoryIDUnprocessableEntity creates a PatchCategoriesCategoryIDUnprocessableEntity with default headers values
func NewPatchCategoriesCategoryIDUnprocessableEntity() *PatchCategoriesCategoryIDUnprocessableEntity {
	return &PatchCategoriesCategoryIDUnprocessableEntity{}
}

/*PatchCategoriesCategoryIDUnprocessableEntity handles this case with default header values.

Category not created. Returns an array of error messages explaining the problems with the provided attributes.
*/
type PatchCategoriesCategoryIDUnprocessableEntity struct {
	Payload *models_core.Category422Response
}

func (o *PatchCategoriesCategoryIDUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PATCH /categories/{category_id}][%d] patchCategoriesCategoryIdUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *PatchCategoriesCategoryIDUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_core.Category422Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
