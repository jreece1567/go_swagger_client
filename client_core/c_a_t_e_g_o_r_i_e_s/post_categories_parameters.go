package c_a_t_e_g_o_r_i_e_s

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"restclient/models_core"
)

// NewPostCategoriesParams creates a new PostCategoriesParams object
// with the default values initialized.
func NewPostCategoriesParams() *PostCategoriesParams {
	var ()
	return &PostCategoriesParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostCategoriesParamsWithTimeout creates a new PostCategoriesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostCategoriesParamsWithTimeout(timeout time.Duration) *PostCategoriesParams {
	var ()
	return &PostCategoriesParams{

		timeout: timeout,
	}
}

/*PostCategoriesParams contains all the parameters to send to the API endpoint
for the post categories operation typically these are written to a http.Request
*/
type PostCategoriesParams struct {

	/*Authorization
	  Staff Access token.

	*/
	Authorization string
	/*CategoryData
	  Data to create a category.

	*/
	CategoryData *models_core.CategoryCreateBody

	timeout time.Duration
}

// WithAuthorization adds the authorization to the post categories params
func (o *PostCategoriesParams) WithAuthorization(Authorization string) *PostCategoriesParams {
	o.Authorization = Authorization
	return o
}

// WithCategoryData adds the categoryData to the post categories params
func (o *PostCategoriesParams) WithCategoryData(CategoryData *models_core.CategoryCreateBody) *PostCategoriesParams {
	o.CategoryData = CategoryData
	return o
}

// WriteToRequest writes these params to a swagger request
func (o *PostCategoriesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	// header param Authorization
	if err := r.SetHeaderParam("Authorization", o.Authorization); err != nil {
		return err
	}

	if o.CategoryData == nil {
		o.CategoryData = new(models_core.CategoryCreateBody)
	}

	if err := r.SetBodyParam(o.CategoryData); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
