package c_a_t_e_g_o_r_i_e_s

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetCategoriesGroupsGroupIDParams creates a new GetCategoriesGroupsGroupIDParams object
// with the default values initialized.
func NewGetCategoriesGroupsGroupIDParams() *GetCategoriesGroupsGroupIDParams {
	var ()
	return &GetCategoriesGroupsGroupIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetCategoriesGroupsGroupIDParamsWithTimeout creates a new GetCategoriesGroupsGroupIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetCategoriesGroupsGroupIDParamsWithTimeout(timeout time.Duration) *GetCategoriesGroupsGroupIDParams {
	var ()
	return &GetCategoriesGroupsGroupIDParams{

		timeout: timeout,
	}
}

/*GetCategoriesGroupsGroupIDParams contains all the parameters to send to the API endpoint
for the get categories groups group ID operation typically these are written to a http.Request
*/
type GetCategoriesGroupsGroupIDParams struct {

	/*GroupID
	  Group identifier. Request the group with group_id.

	*/
	GroupID int64

	timeout time.Duration
}

// WithGroupID adds the groupId to the get categories groups group ID params
func (o *GetCategoriesGroupsGroupIDParams) WithGroupID(GroupID int64) *GetCategoriesGroupsGroupIDParams {
	o.GroupID = GroupID
	return o
}

// WriteToRequest writes these params to a swagger request
func (o *GetCategoriesGroupsGroupIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	// path param group_id
	if err := r.SetPathParam("group_id", swag.FormatInt64(o.GroupID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
