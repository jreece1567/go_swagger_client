package c_a_t_e_g_o_r_i_e_s

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetCategoriesCategoryIDLocalesWestfieldLocaleChildrenTreeParams creates a new GetCategoriesCategoryIDLocalesWestfieldLocaleChildrenTreeParams object
// with the default values initialized.
func NewGetCategoriesCategoryIDLocalesWestfieldLocaleChildrenTreeParams() *GetCategoriesCategoryIDLocalesWestfieldLocaleChildrenTreeParams {
	var ()
	return &GetCategoriesCategoryIDLocalesWestfieldLocaleChildrenTreeParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetCategoriesCategoryIDLocalesWestfieldLocaleChildrenTreeParamsWithTimeout creates a new GetCategoriesCategoryIDLocalesWestfieldLocaleChildrenTreeParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetCategoriesCategoryIDLocalesWestfieldLocaleChildrenTreeParamsWithTimeout(timeout time.Duration) *GetCategoriesCategoryIDLocalesWestfieldLocaleChildrenTreeParams {
	var ()
	return &GetCategoriesCategoryIDLocalesWestfieldLocaleChildrenTreeParams{

		timeout: timeout,
	}
}

/*GetCategoriesCategoryIDLocalesWestfieldLocaleChildrenTreeParams contains all the parameters to send to the API endpoint
for the get categories category ID locales westfield locale children tree operation typically these are written to a http.Request
*/
type GetCategoriesCategoryIDLocalesWestfieldLocaleChildrenTreeParams struct {

	/*CategoryID
	  Category identifier. Filter child categories of the parent with category_id.

	*/
	CategoryID int64
	/*Depth
	  Category depth. Request categories with depth.

	*/
	Depth *int64
	/*Fields
	  Fields in response. Array that lists the fields requested. If empty or not supplied, all attributes will be returned.

	*/
	Fields []string
	/*WestfieldLocale
	  Locale identifier. Request the categories with the locale westfield_locale.

	*/
	WestfieldLocale string

	timeout time.Duration
}

// WithCategoryID adds the categoryId to the get categories category ID locales westfield locale children tree params
func (o *GetCategoriesCategoryIDLocalesWestfieldLocaleChildrenTreeParams) WithCategoryID(CategoryID int64) *GetCategoriesCategoryIDLocalesWestfieldLocaleChildrenTreeParams {
	o.CategoryID = CategoryID
	return o
}

// WithDepth adds the depth to the get categories category ID locales westfield locale children tree params
func (o *GetCategoriesCategoryIDLocalesWestfieldLocaleChildrenTreeParams) WithDepth(Depth *int64) *GetCategoriesCategoryIDLocalesWestfieldLocaleChildrenTreeParams {
	o.Depth = Depth
	return o
}

// WithFields adds the fields to the get categories category ID locales westfield locale children tree params
func (o *GetCategoriesCategoryIDLocalesWestfieldLocaleChildrenTreeParams) WithFields(Fields []string) *GetCategoriesCategoryIDLocalesWestfieldLocaleChildrenTreeParams {
	o.Fields = Fields
	return o
}

// WithWestfieldLocale adds the westfieldLocale to the get categories category ID locales westfield locale children tree params
func (o *GetCategoriesCategoryIDLocalesWestfieldLocaleChildrenTreeParams) WithWestfieldLocale(WestfieldLocale string) *GetCategoriesCategoryIDLocalesWestfieldLocaleChildrenTreeParams {
	o.WestfieldLocale = WestfieldLocale
	return o
}

// WriteToRequest writes these params to a swagger request
func (o *GetCategoriesCategoryIDLocalesWestfieldLocaleChildrenTreeParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	// path param category_id
	if err := r.SetPathParam("category_id", swag.FormatInt64(o.CategoryID)); err != nil {
		return err
	}

	if o.Depth != nil {

		// query param depth
		var qrDepth int64
		if o.Depth != nil {
			qrDepth = *o.Depth
		}
		qDepth := swag.FormatInt64(qrDepth)
		if qDepth != "" {
			if err := r.SetQueryParam("depth", qDepth); err != nil {
				return err
			}
		}

	}

	valuesFields := o.Fields

	joinedFields := swag.JoinByFormat(valuesFields, "csv")
	// query array param fields
	if err := r.SetQueryParam("fields", joinedFields...); err != nil {
		return err
	}

	// path param westfield_locale
	if err := r.SetPathParam("westfield_locale", o.WestfieldLocale); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
