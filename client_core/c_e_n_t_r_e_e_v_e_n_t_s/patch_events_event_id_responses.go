package c_e_n_t_r_e_e_v_e_n_t_s

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"restclient/models_core"
)

// PatchEventsEventIDReader is a Reader for the PatchEventsEventID structure.
type PatchEventsEventIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *PatchEventsEventIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewPatchEventsEventIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewPatchEventsEventIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPatchEventsEventIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 422:
		result := NewPatchEventsEventIDUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPatchEventsEventIDNoContent creates a PatchEventsEventIDNoContent with default headers values
func NewPatchEventsEventIDNoContent() *PatchEventsEventIDNoContent {
	return &PatchEventsEventIDNoContent{}
}

/*PatchEventsEventIDNoContent handles this case with default header values.

Successfully updated the event.
*/
type PatchEventsEventIDNoContent struct {
}

func (o *PatchEventsEventIDNoContent) Error() string {
	return fmt.Sprintf("[PATCH /events/{event_id}][%d] patchEventsEventIdNoContent ", 204)
}

func (o *PatchEventsEventIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchEventsEventIDUnauthorized creates a PatchEventsEventIDUnauthorized with default headers values
func NewPatchEventsEventIDUnauthorized() *PatchEventsEventIDUnauthorized {
	return &PatchEventsEventIDUnauthorized{}
}

/*PatchEventsEventIDUnauthorized handles this case with default header values.

Unauthorized request.
*/
type PatchEventsEventIDUnauthorized struct {
	Payload *models_core.Http401Response
}

func (o *PatchEventsEventIDUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /events/{event_id}][%d] patchEventsEventIdUnauthorized  %+v", 401, o.Payload)
}

func (o *PatchEventsEventIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_core.Http401Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchEventsEventIDNotFound creates a PatchEventsEventIDNotFound with default headers values
func NewPatchEventsEventIDNotFound() *PatchEventsEventIDNotFound {
	return &PatchEventsEventIDNotFound{}
}

/*PatchEventsEventIDNotFound handles this case with default header values.

Event not found.
*/
type PatchEventsEventIDNotFound struct {
	Payload *models_core.Http404Response
}

func (o *PatchEventsEventIDNotFound) Error() string {
	return fmt.Sprintf("[PATCH /events/{event_id}][%d] patchEventsEventIdNotFound  %+v", 404, o.Payload)
}

func (o *PatchEventsEventIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_core.Http404Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchEventsEventIDUnprocessableEntity creates a PatchEventsEventIDUnprocessableEntity with default headers values
func NewPatchEventsEventIDUnprocessableEntity() *PatchEventsEventIDUnprocessableEntity {
	return &PatchEventsEventIDUnprocessableEntity{}
}

/*PatchEventsEventIDUnprocessableEntity handles this case with default header values.

Event not updated. Returns an array of error messages explaining the problems with the provided attributes.
*/
type PatchEventsEventIDUnprocessableEntity struct {
	Payload *models_core.Event422Response
}

func (o *PatchEventsEventIDUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PATCH /events/{event_id}][%d] patchEventsEventIdUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *PatchEventsEventIDUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_core.Event422Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
