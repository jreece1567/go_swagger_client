package m_o_v_i_e_i_n_f_o_r_m_a_t_i_o_n

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"restclient/models_core"
)

// GetCentresCentreIDMoviesMovieIDReader is a Reader for the GetCentresCentreIDMoviesMovieID structure.
type GetCentresCentreIDMoviesMovieIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *GetCentresCentreIDMoviesMovieIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCentresCentreIDMoviesMovieIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewGetCentresCentreIDMoviesMovieIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCentresCentreIDMoviesMovieIDOK creates a GetCentresCentreIDMoviesMovieIDOK with default headers values
func NewGetCentresCentreIDMoviesMovieIDOK() *GetCentresCentreIDMoviesMovieIDOK {
	return &GetCentresCentreIDMoviesMovieIDOK{}
}

/*GetCentresCentreIDMoviesMovieIDOK handles this case with default header values.

Successfully retrieved the individual movie.
*/
type GetCentresCentreIDMoviesMovieIDOK struct {
	Payload *models_core.MovieResponse
}

func (o *GetCentresCentreIDMoviesMovieIDOK) Error() string {
	return fmt.Sprintf("[GET /centres/{centre_id}/movies/{movie_id}][%d] getCentresCentreIdMoviesMovieIdOK  %+v", 200, o.Payload)
}

func (o *GetCentresCentreIDMoviesMovieIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_core.MovieResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCentresCentreIDMoviesMovieIDNotFound creates a GetCentresCentreIDMoviesMovieIDNotFound with default headers values
func NewGetCentresCentreIDMoviesMovieIDNotFound() *GetCentresCentreIDMoviesMovieIDNotFound {
	return &GetCentresCentreIDMoviesMovieIDNotFound{}
}

/*GetCentresCentreIDMoviesMovieIDNotFound handles this case with default header values.

Movie or centre was not found.
*/
type GetCentresCentreIDMoviesMovieIDNotFound struct {
	Payload *models_core.Http404Response
}

func (o *GetCentresCentreIDMoviesMovieIDNotFound) Error() string {
	return fmt.Sprintf("[GET /centres/{centre_id}/movies/{movie_id}][%d] getCentresCentreIdMoviesMovieIdNotFound  %+v", 404, o.Payload)
}

func (o *GetCentresCentreIDMoviesMovieIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_core.Http404Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
