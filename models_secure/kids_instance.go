package models_secure

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

/*KidsInstance Data for a single kid.

swagger:model kidsInstance
*/
type KidsInstance struct {

	/* birth date

	Required: true
	*/
	BirthDate *string `json:"birth_date"`

	/* created at

	Required: true
	*/
	CreatedAt *strfmt.DateTime `json:"created_at"`

	/* first name

	Required: true
	*/
	FirstName *string `json:"first_name"`

	/* gender

	Required: true
	*/
	Gender *string `json:"gender"`

	/* updated at

	Required: true
	*/
	UpdatedAt *strfmt.DateTime `json:"updated_at"`
}

// Validate validates this kids instance
func (m *KidsInstance) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBirthDate(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateCreatedAt(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateFirstName(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateGender(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateUpdatedAt(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *KidsInstance) validateBirthDate(formats strfmt.Registry) error {

	if err := validate.Required("birth_date", "body", m.BirthDate); err != nil {
		return err
	}

	return nil
}

func (m *KidsInstance) validateCreatedAt(formats strfmt.Registry) error {

	if err := validate.Required("created_at", "body", m.CreatedAt); err != nil {
		return err
	}

	return nil
}

func (m *KidsInstance) validateFirstName(formats strfmt.Registry) error {

	if err := validate.Required("first_name", "body", m.FirstName); err != nil {
		return err
	}

	return nil
}

var kidsInstanceTypeGenderPropEnum []interface{}

// prop value enum
func (m *KidsInstance) validateGenderEnum(path, location string, value string) error {
	if kidsInstanceTypeGenderPropEnum == nil {
		var res []string
		if err := json.Unmarshal([]byte(`["m","f","u","o"]`), &res); err != nil {
			return err
		}
		for _, v := range res {
			kidsInstanceTypeGenderPropEnum = append(kidsInstanceTypeGenderPropEnum, v)
		}
	}
	if err := validate.Enum(path, location, value, kidsInstanceTypeGenderPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *KidsInstance) validateGender(formats strfmt.Registry) error {

	if err := validate.Required("gender", "body", m.Gender); err != nil {
		return err
	}

	// value enum
	if err := m.validateGenderEnum("gender", "body", *m.Gender); err != nil {
		return err
	}

	return nil
}

func (m *KidsInstance) validateUpdatedAt(formats strfmt.Registry) error {

	if err := validate.Required("updated_at", "body", m.UpdatedAt); err != nil {
		return err
	}

	return nil
}
