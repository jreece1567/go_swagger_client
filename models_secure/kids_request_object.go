package models_secure

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

/*KidsRequestObject Data to add kids to account

swagger:model kidsRequestObject
*/
type KidsRequestObject struct {

	/* Birth date of the kid. Must be of the form YYYY-MM-DD. Must be under 12 years of age.

	Required: true
	*/
	BirthDate *strfmt.Date `json:"birth_date"`

	/* First name of the kid.

	Required: true
	*/
	FirstName *string `json:"first_name"`

	/* Gender of the kid.
	 */
	Gender string `json:"gender,omitempty"`
}

// Validate validates this kids request object
func (m *KidsRequestObject) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBirthDate(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateFirstName(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateGender(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *KidsRequestObject) validateBirthDate(formats strfmt.Registry) error {

	if err := validate.Required("birth_date", "body", m.BirthDate); err != nil {
		return err
	}

	return nil
}

func (m *KidsRequestObject) validateFirstName(formats strfmt.Registry) error {

	if err := validate.Required("first_name", "body", m.FirstName); err != nil {
		return err
	}

	return nil
}

var kidsRequestObjectTypeGenderPropEnum []interface{}

// prop value enum
func (m *KidsRequestObject) validateGenderEnum(path, location string, value string) error {
	if kidsRequestObjectTypeGenderPropEnum == nil {
		var res []string
		if err := json.Unmarshal([]byte(`["m","f","u","o"]`), &res); err != nil {
			return err
		}
		for _, v := range res {
			kidsRequestObjectTypeGenderPropEnum = append(kidsRequestObjectTypeGenderPropEnum, v)
		}
	}
	if err := validate.Enum(path, location, value, kidsRequestObjectTypeGenderPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *KidsRequestObject) validateGender(formats strfmt.Registry) error {

	if swag.IsZero(m.Gender) { // not required
		return nil
	}

	// value enum
	if err := m.validateGenderEnum("gender", "body", m.Gender); err != nil {
		return err
	}

	return nil
}
