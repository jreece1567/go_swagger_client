package models_secure

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

/*MessagingPreferenceInstance Messaging preference

swagger:model MessagingPreferenceInstance
*/
type MessagingPreferenceInstance struct {

	/* food messaging preferences.

	Required: true
	*/
	Food *MessagingPreferenceItemInstance `json:"food"`

	/* parking messaging preferences.

	Required: true
	*/
	Parking *MessagingPreferenceItemInstance `json:"parking"`
}

// Validate validates this messaging preference instance
func (m *MessagingPreferenceInstance) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateFood(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateParking(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *MessagingPreferenceInstance) validateFood(formats strfmt.Registry) error {

	if err := validate.Required("food", "body", m.Food); err != nil {
		return err
	}

	if m.Food != nil {

		if err := m.Food.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}

func (m *MessagingPreferenceInstance) validateParking(formats strfmt.Registry) error {

	if err := validate.Required("parking", "body", m.Parking); err != nil {
		return err
	}

	if m.Parking != nil {

		if err := m.Parking.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}
