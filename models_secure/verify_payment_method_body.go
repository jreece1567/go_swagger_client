package models_secure

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

/*VerifyPaymentMethodBody Data to verify a payment method.

swagger:model verifyPaymentMethodBody
*/
type VerifyPaymentMethodBody struct {

	/* The country code used to verify the payment method details of the customer. This country code is read-only and cannot be changed
	 */
	Country *string `json:"country,omitempty"`

	/* Customer IPv4 address.
	 */
	IP string `json:"ip,omitempty"`
}

// Validate validates this verify payment method body
func (m *VerifyPaymentMethodBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCountry(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var verifyPaymentMethodBodyTypeCountryPropEnum []interface{}

// prop value enum
func (m *VerifyPaymentMethodBody) validateCountryEnum(path, location string, value string) error {
	if verifyPaymentMethodBodyTypeCountryPropEnum == nil {
		var res []string
		if err := json.Unmarshal([]byte(`["AU","NZ","UK","US"]`), &res); err != nil {
			return err
		}
		for _, v := range res {
			verifyPaymentMethodBodyTypeCountryPropEnum = append(verifyPaymentMethodBodyTypeCountryPropEnum, v)
		}
	}
	if err := validate.Enum(path, location, value, verifyPaymentMethodBodyTypeCountryPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *VerifyPaymentMethodBody) validateCountry(formats strfmt.Registry) error {

	if swag.IsZero(m.Country) { // not required
		return nil
	}

	// value enum
	if err := m.validateCountryEnum("country", "body", *m.Country); err != nil {
		return err
	}

	return nil
}
