package models_secure

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

/*PasswordChangeBody Data to change an account password.

swagger:model passwordChangeBody
*/
type PasswordChangeBody struct {

	/* Current account's password

	Required: true
	*/
	CurrentPassword *string `json:"current_password"`

	/* New account's password

	Required: true
	Max Length: 30
	Min Length: 8
	*/
	NewPassword *string `json:"new_password"`
}

// Validate validates this password change body
func (m *PasswordChangeBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCurrentPassword(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateNewPassword(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PasswordChangeBody) validateCurrentPassword(formats strfmt.Registry) error {

	if err := validate.Required("current_password", "body", m.CurrentPassword); err != nil {
		return err
	}

	return nil
}

func (m *PasswordChangeBody) validateNewPassword(formats strfmt.Registry) error {

	if err := validate.Required("new_password", "body", m.NewPassword); err != nil {
		return err
	}

	if err := validate.MinLength("new_password", "body", string(*m.NewPassword), 8); err != nil {
		return err
	}

	if err := validate.MaxLength("new_password", "body", string(*m.NewPassword), 30); err != nil {
		return err
	}

	return nil
}
