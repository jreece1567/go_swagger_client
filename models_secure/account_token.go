package models_secure

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

/*AccountToken Token

swagger:model accountToken
*/
type AccountToken struct {

	/* Access token

	Required: true
	*/
	AccessToken *string `json:"access_token"`

	/* Token creation date as unix timestamp
	 */
	CreatedAt int64 `json:"created_at,omitempty"`

	/* Token TTL

	Required: true
	*/
	ExpiresIn *int64 `json:"expires_in"`

	/* Refresh Token string
	 */
	RefreshToken string `json:"refresh_token,omitempty"`

	/* Token Type

	Required: true
	*/
	TokenType *string `json:"token_type"`
}

// Validate validates this account token
func (m *AccountToken) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAccessToken(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateExpiresIn(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateTokenType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AccountToken) validateAccessToken(formats strfmt.Registry) error {

	if err := validate.Required("access_token", "body", m.AccessToken); err != nil {
		return err
	}

	return nil
}

func (m *AccountToken) validateExpiresIn(formats strfmt.Registry) error {

	if err := validate.Required("expires_in", "body", m.ExpiresIn); err != nil {
		return err
	}

	return nil
}

func (m *AccountToken) validateTokenType(formats strfmt.Registry) error {

	if err := validate.Required("token_type", "body", m.TokenType); err != nil {
		return err
	}

	return nil
}
