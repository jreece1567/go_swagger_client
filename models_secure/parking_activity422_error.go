package models_secure

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
)

/*ParkingActivity422Error parking activity422 error

swagger:model parkingActivity422Error
*/
type ParkingActivity422Error struct {

	/* access device
	 */
	AccessDevice ValidationError `json:"access_device,omitempty"`

	/* activity at
	 */
	ActivityAt ValidationError `json:"activity_at,omitempty"`

	/* activity type
	 */
	ActivityType ValidationError `json:"activity_type,omitempty"`

	/* A list of errors that do not apply to an attribute.
	 */
	Base ValidationError `json:"base,omitempty"`

	/* centre id
	 */
	CentreID ValidationError `json:"centre_id,omitempty"`

	/* currency
	 */
	Currency ValidationError `json:"currency,omitempty"`

	/* parking operator
	 */
	ParkingOperator ValidationError `json:"parking_operator,omitempty"`

	/* payment method token
	 */
	PaymentMethodToken ValidationError `json:"payment_method_token,omitempty"`

	/* person id
	 */
	PersonID ValidationError `json:"person_id,omitempty"`

	/* transaction discount amount
	 */
	TransactionDiscountAmount ValidationError `json:"transaction_discount_amount,omitempty"`

	/* transaction final amount
	 */
	TransactionFinalAmount ValidationError `json:"transaction_final_amount,omitempty"`

	/* transaction id
	 */
	TransactionID ValidationError `json:"transaction_id,omitempty"`

	/* transaction original amount
	 */
	TransactionOriginalAmount ValidationError `json:"transaction_original_amount,omitempty"`

	/* transaction surcharge amoun
	 */
	TransactionSurchargeAmoun ValidationError `json:"transaction_surcharge_amoun,omitempty"`

	/* transaction tax amount
	 */
	TransactionTaxAmount ValidationError `json:"transaction_tax_amount,omitempty"`

	/* vendor transaction id
	 */
	VendorTransactionID ValidationError `json:"vendor_transaction_id,omitempty"`
}

// Validate validates this parking activity422 error
func (m *ParkingActivity422Error) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
