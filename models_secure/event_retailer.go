package models_secure

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

/*EventRetailer event retailer

swagger:model eventRetailer
*/
type EventRetailer struct {

	/* Retailer code of the retailer associated with the event

	Required: true
	*/
	RetailerCode *string `json:"retailer_code"`

	/* ID of the retailer associated with the event

	Required: true
	*/
	RetailerID *int64 `json:"retailer_id"`

	/* IDs of stores for the retailer which is associated with the event

	Required: true
	*/
	StoreIds []int64 `json:"store_ids"`
}

// Validate validates this event retailer
func (m *EventRetailer) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateRetailerCode(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateRetailerID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateStoreIds(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *EventRetailer) validateRetailerCode(formats strfmt.Registry) error {

	if err := validate.Required("retailer_code", "body", m.RetailerCode); err != nil {
		return err
	}

	return nil
}

func (m *EventRetailer) validateRetailerID(formats strfmt.Registry) error {

	if err := validate.Required("retailer_id", "body", m.RetailerID); err != nil {
		return err
	}

	return nil
}

func (m *EventRetailer) validateStoreIds(formats strfmt.Registry) error {

	if err := validate.Required("store_ids", "body", m.StoreIds); err != nil {
		return err
	}

	return nil
}
