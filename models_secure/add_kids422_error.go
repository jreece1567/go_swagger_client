package models_secure

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/go-openapi/errors"
)

/*AddKids422Error Missing or invalid data for kid record.

swagger:model addKids422Error
*/
type AddKids422Error struct {

	/* kids
	 */
	Kids []string `json:"kids,omitempty"`

	/* kids birth date
	 */
	KidsBirthDate []string `json:"kids.birth_date,omitempty"`

	/* kids first name
	 */
	KidsFirstName []string `json:"kids.first_name,omitempty"`

	/* kids gender
	 */
	KidsGender []string `json:"kids.gender,omitempty"`
}

// Validate validates this add kids422 error
func (m *AddKids422Error) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateKids(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateKidsBirthDate(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateKidsFirstName(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateKidsGender(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AddKids422Error) validateKids(formats strfmt.Registry) error {

	if swag.IsZero(m.Kids) { // not required
		return nil
	}

	return nil
}

func (m *AddKids422Error) validateKidsBirthDate(formats strfmt.Registry) error {

	if swag.IsZero(m.KidsBirthDate) { // not required
		return nil
	}

	return nil
}

func (m *AddKids422Error) validateKidsFirstName(formats strfmt.Registry) error {

	if swag.IsZero(m.KidsFirstName) { // not required
		return nil
	}

	return nil
}

func (m *AddKids422Error) validateKidsGender(formats strfmt.Registry) error {

	if swag.IsZero(m.KidsGender) { // not required
		return nil
	}

	return nil
}
