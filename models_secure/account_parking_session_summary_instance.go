package models_secure

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

/*AccountParkingSessionSummaryInstance ParkingSessionSummary

swagger:model accountParkingSessionSummaryInstance
*/
type AccountParkingSessionSummaryInstance struct {

	/* Month of summary.

	Required: true
	*/
	Month *int64 `json:"month"`

	/* Total cost of the sessions on the month

	Required: true
	*/
	TotalCost *string `json:"total_cost"`

	/* Count of sessions of the month

	Required: true
	*/
	TotalSessions *int64 `json:"total_sessions"`

	/* Year of summary.

	Required: true
	*/
	Year *int64 `json:"year"`
}

// Validate validates this account parking session summary instance
func (m *AccountParkingSessionSummaryInstance) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMonth(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateTotalCost(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateTotalSessions(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateYear(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AccountParkingSessionSummaryInstance) validateMonth(formats strfmt.Registry) error {

	if err := validate.Required("month", "body", m.Month); err != nil {
		return err
	}

	return nil
}

func (m *AccountParkingSessionSummaryInstance) validateTotalCost(formats strfmt.Registry) error {

	if err := validate.Required("total_cost", "body", m.TotalCost); err != nil {
		return err
	}

	return nil
}

func (m *AccountParkingSessionSummaryInstance) validateTotalSessions(formats strfmt.Registry) error {

	if err := validate.Required("total_sessions", "body", m.TotalSessions); err != nil {
		return err
	}

	return nil
}

func (m *AccountParkingSessionSummaryInstance) validateYear(formats strfmt.Registry) error {

	if err := validate.Required("year", "body", m.Year); err != nil {
		return err
	}

	return nil
}
