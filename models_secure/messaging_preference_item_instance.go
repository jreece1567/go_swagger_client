package models_secure

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

/*MessagingPreferenceItemInstance messaging preference item instance

swagger:model MessagingPreferenceItemInstance
*/
type MessagingPreferenceItemInstance struct {

	/* Value is true if user enabled notifications via email

	Required: true
	*/
	Email *bool `json:"email"`

	/* Value is true if user enabled notifications via push

	Required: true
	*/
	Push *bool `json:"push"`

	/* Value is true if user enabled notifications via sms

	Required: true
	*/
	Sms *bool `json:"sms"`
}

// Validate validates this messaging preference item instance
func (m *MessagingPreferenceItemInstance) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEmail(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validatePush(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateSms(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *MessagingPreferenceItemInstance) validateEmail(formats strfmt.Registry) error {

	if err := validate.Required("email", "body", m.Email); err != nil {
		return err
	}

	return nil
}

func (m *MessagingPreferenceItemInstance) validatePush(formats strfmt.Registry) error {

	if err := validate.Required("push", "body", m.Push); err != nil {
		return err
	}

	return nil
}

func (m *MessagingPreferenceItemInstance) validateSms(formats strfmt.Registry) error {

	if err := validate.Required("sms", "body", m.Sms); err != nil {
		return err
	}

	return nil
}
