package i_n_t_e_g_r_a_t_i_o_n_s

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new i n t e g r a t i o n s API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for i n t e g r a t i o n s API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
GetPeopleAnalytics gets a list of accounts and their corresponding information

Get a list of accounts updated since 24 hours ago (or as given in the params) and their corresponding information
*/
func (a *Client) GetPeopleAnalytics(params *GetPeopleAnalyticsParams, authInfo runtime.ClientAuthInfoWriter) (*GetPeopleAnalyticsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetPeopleAnalyticsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetPeopleAnalytics",
		Method:             "GET",
		PathPattern:        "/people/analytics",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetPeopleAnalyticsReader{formats: a.formats},
		AuthInfo:           authInfo,
	})
	if err != nil {
		return nil, err
	}
	return result.(*GetPeopleAnalyticsOK), nil
}

/*
GetPeopleIntegrationsEdnaAccounts gets a list of accounts and their corresponding information

Get a list of accounts updated since 24 hours ago (or as given in the params) and their corresponding information
*/
func (a *Client) GetPeopleIntegrationsEdnaAccounts(params *GetPeopleIntegrationsEdnaAccountsParams, authInfo runtime.ClientAuthInfoWriter) (*GetPeopleIntegrationsEdnaAccountsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetPeopleIntegrationsEdnaAccountsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetPeopleIntegrationsEdnaAccounts",
		Method:             "GET",
		PathPattern:        "/people/integrations/edna/accounts",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetPeopleIntegrationsEdnaAccountsReader{formats: a.formats},
		AuthInfo:           authInfo,
	})
	if err != nil {
		return nil, err
	}
	return result.(*GetPeopleIntegrationsEdnaAccountsOK), nil
}

/*
GetPeopleParking lists accounts registered on parking service

Request an array of accounts registered on parking service.
*/
func (a *Client) GetPeopleParking(params *GetPeopleParkingParams, authInfo runtime.ClientAuthInfoWriter) (*GetPeopleParkingOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetPeopleParkingParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetPeopleParking",
		Method:             "GET",
		PathPattern:        "/people/parking",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetPeopleParkingReader{formats: a.formats},
		AuthInfo:           authInfo,
	})
	if err != nil {
		return nil, err
	}
	return result.(*GetPeopleParkingOK), nil
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
