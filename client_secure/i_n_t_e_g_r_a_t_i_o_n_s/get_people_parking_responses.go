package i_n_t_e_g_r_a_t_i_o_n_s

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"restclient/models_secure"
)

// GetPeopleParkingReader is a Reader for the GetPeopleParking structure.
type GetPeopleParkingReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *GetPeopleParkingReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetPeopleParkingOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetPeopleParkingUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetPeopleParkingOK creates a GetPeopleParkingOK with default headers values
func NewGetPeopleParkingOK() *GetPeopleParkingOK {
	return &GetPeopleParkingOK{}
}

/*GetPeopleParkingOK handles this case with default header values.

Successfully retrieved the list of account registered on parking service.
*/
type GetPeopleParkingOK struct {
	Payload *models_secure.ParkingAccountsListResponse
}

func (o *GetPeopleParkingOK) Error() string {
	return fmt.Sprintf("[GET /people/parking][%d] getPeopleParkingOK  %+v", 200, o.Payload)
}

func (o *GetPeopleParkingOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_secure.ParkingAccountsListResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPeopleParkingUnauthorized creates a GetPeopleParkingUnauthorized with default headers values
func NewGetPeopleParkingUnauthorized() *GetPeopleParkingUnauthorized {
	return &GetPeopleParkingUnauthorized{}
}

/*GetPeopleParkingUnauthorized handles this case with default header values.

Unauthorized
*/
type GetPeopleParkingUnauthorized struct {
	Payload *models_secure.UnauthorizedResponse
}

func (o *GetPeopleParkingUnauthorized) Error() string {
	return fmt.Sprintf("[GET /people/parking][%d] getPeopleParkingUnauthorized  %+v", 401, o.Payload)
}

func (o *GetPeopleParkingUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_secure.UnauthorizedResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
