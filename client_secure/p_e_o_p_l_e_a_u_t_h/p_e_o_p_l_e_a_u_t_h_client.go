package p_e_o_p_l_e_a_u_t_h

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new p e o p l e a u t h API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for p e o p l e a u t h API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
GetPeopleOauthTokenInfo returns information about an o auth access token
*/
func (a *Client) GetPeopleOauthTokenInfo(params *GetPeopleOauthTokenInfoParams, authInfo runtime.ClientAuthInfoWriter) (*GetPeopleOauthTokenInfoOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetPeopleOauthTokenInfoParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetPeopleOauthTokenInfo",
		Method:             "GET",
		PathPattern:        "/people/oauth/token/info",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetPeopleOauthTokenInfoReader{formats: a.formats},
		AuthInfo:           authInfo,
	})
	if err != nil {
		return nil, err
	}
	return result.(*GetPeopleOauthTokenInfoOK), nil
}

/*
PostPeopleOauthRevoke revokes an o auth token
*/
func (a *Client) PostPeopleOauthRevoke(params *PostPeopleOauthRevokeParams, authInfo runtime.ClientAuthInfoWriter) (*PostPeopleOauthRevokeOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostPeopleOauthRevokeParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostPeopleOauthRevoke",
		Method:             "POST",
		PathPattern:        "/people/oauth/revoke",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostPeopleOauthRevokeReader{formats: a.formats},
		AuthInfo:           authInfo,
	})
	if err != nil {
		return nil, err
	}
	return result.(*PostPeopleOauthRevokeOK), nil
}

/*
PostPeopleOauthToken creates o auth token

Generates a token that is needed to manage the user profile
*/
func (a *Client) PostPeopleOauthToken(params *PostPeopleOauthTokenParams, authInfo runtime.ClientAuthInfoWriter) (*PostPeopleOauthTokenOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostPeopleOauthTokenParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostPeopleOauthToken",
		Method:             "POST",
		PathPattern:        "/people/oauth/token",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostPeopleOauthTokenReader{formats: a.formats},
		AuthInfo:           authInfo,
	})
	if err != nil {
		return nil, err
	}
	return result.(*PostPeopleOauthTokenOK), nil
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
