package p_a_y_m_e_n_t_s

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"restclient/models_secure"
)

// DeletePaymentsMerchantsMerchantIDReader is a Reader for the DeletePaymentsMerchantsMerchantID structure.
type DeletePaymentsMerchantsMerchantIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *DeletePaymentsMerchantsMerchantIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewDeletePaymentsMerchantsMerchantIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewDeletePaymentsMerchantsMerchantIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeletePaymentsMerchantsMerchantIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeletePaymentsMerchantsMerchantIDNoContent creates a DeletePaymentsMerchantsMerchantIDNoContent with default headers values
func NewDeletePaymentsMerchantsMerchantIDNoContent() *DeletePaymentsMerchantsMerchantIDNoContent {
	return &DeletePaymentsMerchantsMerchantIDNoContent{}
}

/*DeletePaymentsMerchantsMerchantIDNoContent handles this case with default header values.

Successfully deleted the merchant.
*/
type DeletePaymentsMerchantsMerchantIDNoContent struct {
}

func (o *DeletePaymentsMerchantsMerchantIDNoContent) Error() string {
	return fmt.Sprintf("[DELETE /payments/merchants/{merchant_id}][%d] deletePaymentsMerchantsMerchantIdNoContent ", 204)
}

func (o *DeletePaymentsMerchantsMerchantIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeletePaymentsMerchantsMerchantIDUnauthorized creates a DeletePaymentsMerchantsMerchantIDUnauthorized with default headers values
func NewDeletePaymentsMerchantsMerchantIDUnauthorized() *DeletePaymentsMerchantsMerchantIDUnauthorized {
	return &DeletePaymentsMerchantsMerchantIDUnauthorized{}
}

/*DeletePaymentsMerchantsMerchantIDUnauthorized handles this case with default header values.

Unauthorized request
*/
type DeletePaymentsMerchantsMerchantIDUnauthorized struct {
	Payload *models_secure.Payment401Response
}

func (o *DeletePaymentsMerchantsMerchantIDUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /payments/merchants/{merchant_id}][%d] deletePaymentsMerchantsMerchantIdUnauthorized  %+v", 401, o.Payload)
}

func (o *DeletePaymentsMerchantsMerchantIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_secure.Payment401Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeletePaymentsMerchantsMerchantIDNotFound creates a DeletePaymentsMerchantsMerchantIDNotFound with default headers values
func NewDeletePaymentsMerchantsMerchantIDNotFound() *DeletePaymentsMerchantsMerchantIDNotFound {
	return &DeletePaymentsMerchantsMerchantIDNotFound{}
}

/*DeletePaymentsMerchantsMerchantIDNotFound handles this case with default header values.

Merchant not found.
*/
type DeletePaymentsMerchantsMerchantIDNotFound struct {
	Payload *models_secure.Http404Response
}

func (o *DeletePaymentsMerchantsMerchantIDNotFound) Error() string {
	return fmt.Sprintf("[DELETE /payments/merchants/{merchant_id}][%d] deletePaymentsMerchantsMerchantIdNotFound  %+v", 404, o.Payload)
}

func (o *DeletePaymentsMerchantsMerchantIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_secure.Http404Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
