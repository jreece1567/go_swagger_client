package p_a_y_m_e_n_t_s

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	"restclient/models_secure"
)

// NewPatchPaymentsStripeMerchantsStripeAccountIDParams creates a new PatchPaymentsStripeMerchantsStripeAccountIDParams object
// with the default values initialized.
func NewPatchPaymentsStripeMerchantsStripeAccountIDParams() *PatchPaymentsStripeMerchantsStripeAccountIDParams {
	var ()
	return &PatchPaymentsStripeMerchantsStripeAccountIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPatchPaymentsStripeMerchantsStripeAccountIDParamsWithTimeout creates a new PatchPaymentsStripeMerchantsStripeAccountIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPatchPaymentsStripeMerchantsStripeAccountIDParamsWithTimeout(timeout time.Duration) *PatchPaymentsStripeMerchantsStripeAccountIDParams {
	var ()
	return &PatchPaymentsStripeMerchantsStripeAccountIDParams{

		timeout: timeout,
	}
}

/*PatchPaymentsStripeMerchantsStripeAccountIDParams contains all the parameters to send to the API endpoint
for the patch payments stripe merchants stripe account ID operation typically these are written to a http.Request
*/
type PatchPaymentsStripeMerchantsStripeAccountIDParams struct {

	/*Authorization
	  Access token

	*/
	Authorization string
	/*MerchantData
	  Data to update a merchant.

	*/
	MerchantData *models_secure.MerchantUpdateBody
	/*StripeAccountID
	  Stripe Merchant identifier.

	*/
	StripeAccountID int64

	timeout time.Duration
}

// WithAuthorization adds the authorization to the patch payments stripe merchants stripe account ID params
func (o *PatchPaymentsStripeMerchantsStripeAccountIDParams) WithAuthorization(Authorization string) *PatchPaymentsStripeMerchantsStripeAccountIDParams {
	o.Authorization = Authorization
	return o
}

// WithMerchantData adds the merchantData to the patch payments stripe merchants stripe account ID params
func (o *PatchPaymentsStripeMerchantsStripeAccountIDParams) WithMerchantData(MerchantData *models_secure.MerchantUpdateBody) *PatchPaymentsStripeMerchantsStripeAccountIDParams {
	o.MerchantData = MerchantData
	return o
}

// WithStripeAccountID adds the stripeAccountId to the patch payments stripe merchants stripe account ID params
func (o *PatchPaymentsStripeMerchantsStripeAccountIDParams) WithStripeAccountID(StripeAccountID int64) *PatchPaymentsStripeMerchantsStripeAccountIDParams {
	o.StripeAccountID = StripeAccountID
	return o
}

// WriteToRequest writes these params to a swagger request
func (o *PatchPaymentsStripeMerchantsStripeAccountIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	// header param Authorization
	if err := r.SetHeaderParam("Authorization", o.Authorization); err != nil {
		return err
	}

	if o.MerchantData == nil {
		o.MerchantData = new(models_secure.MerchantUpdateBody)
	}

	if err := r.SetBodyParam(o.MerchantData); err != nil {
		return err
	}

	// path param stripe_account_id
	if err := r.SetPathParam("stripe_account_id", swag.FormatInt64(o.StripeAccountID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
