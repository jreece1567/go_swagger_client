package p_a_y_m_e_n_t_s

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetPaymentsGatewaysParams creates a new GetPaymentsGatewaysParams object
// with the default values initialized.
func NewGetPaymentsGatewaysParams() *GetPaymentsGatewaysParams {
	var (
		pageDefault    int64 = int64(1)
		perPageDefault int64 = int64(25)
	)
	return &GetPaymentsGatewaysParams{
		Page:    &pageDefault,
		PerPage: &perPageDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewGetPaymentsGatewaysParamsWithTimeout creates a new GetPaymentsGatewaysParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetPaymentsGatewaysParamsWithTimeout(timeout time.Duration) *GetPaymentsGatewaysParams {
	var (
		pageDefault    int64 = int64(1)
		perPageDefault int64 = int64(25)
	)
	return &GetPaymentsGatewaysParams{
		Page:    &pageDefault,
		PerPage: &perPageDefault,

		timeout: timeout,
	}
}

/*GetPaymentsGatewaysParams contains all the parameters to send to the API endpoint
for the get payments gateways operation typically these are written to a http.Request
*/
type GetPaymentsGatewaysParams struct {

	/*Authorization
	  Access token

	*/
	Authorization string
	/*Fields
	  Fields in response. Array that lists the fields requested. If empty or not supplied, all attributes will be returned.

	*/
	Fields []string
	/*Page
	  Results page number. Specific page of results to request when paginating.

	*/
	Page *int64
	/*PerPage
	  Results per page. Number of items per result set when paginating.

	*/
	PerPage *int64

	timeout time.Duration
}

// WithAuthorization adds the authorization to the get payments gateways params
func (o *GetPaymentsGatewaysParams) WithAuthorization(Authorization string) *GetPaymentsGatewaysParams {
	o.Authorization = Authorization
	return o
}

// WithFields adds the fields to the get payments gateways params
func (o *GetPaymentsGatewaysParams) WithFields(Fields []string) *GetPaymentsGatewaysParams {
	o.Fields = Fields
	return o
}

// WithPage adds the page to the get payments gateways params
func (o *GetPaymentsGatewaysParams) WithPage(Page *int64) *GetPaymentsGatewaysParams {
	o.Page = Page
	return o
}

// WithPerPage adds the perPage to the get payments gateways params
func (o *GetPaymentsGatewaysParams) WithPerPage(PerPage *int64) *GetPaymentsGatewaysParams {
	o.PerPage = PerPage
	return o
}

// WriteToRequest writes these params to a swagger request
func (o *GetPaymentsGatewaysParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	// header param Authorization
	if err := r.SetHeaderParam("Authorization", o.Authorization); err != nil {
		return err
	}

	valuesFields := o.Fields

	joinedFields := swag.JoinByFormat(valuesFields, "csv")
	// query array param fields
	if err := r.SetQueryParam("fields", joinedFields...); err != nil {
		return err
	}

	if o.Page != nil {

		// query param page
		var qrPage int64
		if o.Page != nil {
			qrPage = *o.Page
		}
		qPage := swag.FormatInt64(qrPage)
		if qPage != "" {
			if err := r.SetQueryParam("page", qPage); err != nil {
				return err
			}
		}

	}

	if o.PerPage != nil {

		// query param per_page
		var qrPerPage int64
		if o.PerPage != nil {
			qrPerPage = *o.PerPage
		}
		qPerPage := swag.FormatInt64(qrPerPage)
		if qPerPage != "" {
			if err := r.SetQueryParam("per_page", qPerPage); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
