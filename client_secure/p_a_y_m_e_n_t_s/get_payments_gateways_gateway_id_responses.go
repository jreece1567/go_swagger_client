package p_a_y_m_e_n_t_s

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"restclient/models_secure"
)

// GetPaymentsGatewaysGatewayIDReader is a Reader for the GetPaymentsGatewaysGatewayID structure.
type GetPaymentsGatewaysGatewayIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *GetPaymentsGatewaysGatewayIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetPaymentsGatewaysGatewayIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetPaymentsGatewaysGatewayIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetPaymentsGatewaysGatewayIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetPaymentsGatewaysGatewayIDOK creates a GetPaymentsGatewaysGatewayIDOK with default headers values
func NewGetPaymentsGatewaysGatewayIDOK() *GetPaymentsGatewaysGatewayIDOK {
	return &GetPaymentsGatewaysGatewayIDOK{}
}

/*GetPaymentsGatewaysGatewayIDOK handles this case with default header values.

Successfully retrieved the individual gateway.
*/
type GetPaymentsGatewaysGatewayIDOK struct {
	Payload *models_secure.GatewayResponse
}

func (o *GetPaymentsGatewaysGatewayIDOK) Error() string {
	return fmt.Sprintf("[GET /payments/gateways/{gateway_id}][%d] getPaymentsGatewaysGatewayIdOK  %+v", 200, o.Payload)
}

func (o *GetPaymentsGatewaysGatewayIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_secure.GatewayResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPaymentsGatewaysGatewayIDUnauthorized creates a GetPaymentsGatewaysGatewayIDUnauthorized with default headers values
func NewGetPaymentsGatewaysGatewayIDUnauthorized() *GetPaymentsGatewaysGatewayIDUnauthorized {
	return &GetPaymentsGatewaysGatewayIDUnauthorized{}
}

/*GetPaymentsGatewaysGatewayIDUnauthorized handles this case with default header values.

Unauthorized request
*/
type GetPaymentsGatewaysGatewayIDUnauthorized struct {
	Payload *models_secure.Payment401Response
}

func (o *GetPaymentsGatewaysGatewayIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /payments/gateways/{gateway_id}][%d] getPaymentsGatewaysGatewayIdUnauthorized  %+v", 401, o.Payload)
}

func (o *GetPaymentsGatewaysGatewayIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_secure.Payment401Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPaymentsGatewaysGatewayIDNotFound creates a GetPaymentsGatewaysGatewayIDNotFound with default headers values
func NewGetPaymentsGatewaysGatewayIDNotFound() *GetPaymentsGatewaysGatewayIDNotFound {
	return &GetPaymentsGatewaysGatewayIDNotFound{}
}

/*GetPaymentsGatewaysGatewayIDNotFound handles this case with default header values.

Gateway not found.
*/
type GetPaymentsGatewaysGatewayIDNotFound struct {
	Payload *models_secure.Http404Response
}

func (o *GetPaymentsGatewaysGatewayIDNotFound) Error() string {
	return fmt.Sprintf("[GET /payments/gateways/{gateway_id}][%d] getPaymentsGatewaysGatewayIdNotFound  %+v", 404, o.Payload)
}

func (o *GetPaymentsGatewaysGatewayIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_secure.Http404Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
