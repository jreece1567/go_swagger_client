package p_a_y_m_e_n_t_s

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"restclient/models_secure"
)

// GetPaymentsStripeMerchantsStripeAccountIDReader is a Reader for the GetPaymentsStripeMerchantsStripeAccountID structure.
type GetPaymentsStripeMerchantsStripeAccountIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *GetPaymentsStripeMerchantsStripeAccountIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetPaymentsStripeMerchantsStripeAccountIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetPaymentsStripeMerchantsStripeAccountIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetPaymentsStripeMerchantsStripeAccountIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetPaymentsStripeMerchantsStripeAccountIDOK creates a GetPaymentsStripeMerchantsStripeAccountIDOK with default headers values
func NewGetPaymentsStripeMerchantsStripeAccountIDOK() *GetPaymentsStripeMerchantsStripeAccountIDOK {
	return &GetPaymentsStripeMerchantsStripeAccountIDOK{}
}

/*GetPaymentsStripeMerchantsStripeAccountIDOK handles this case with default header values.

Successfully retrieved the individual merchant.
*/
type GetPaymentsStripeMerchantsStripeAccountIDOK struct {
	Payload *models_secure.MerchantResponse
}

func (o *GetPaymentsStripeMerchantsStripeAccountIDOK) Error() string {
	return fmt.Sprintf("[GET /payments/stripe_merchants/{stripe_account_id}][%d] getPaymentsStripeMerchantsStripeAccountIdOK  %+v", 200, o.Payload)
}

func (o *GetPaymentsStripeMerchantsStripeAccountIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_secure.MerchantResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPaymentsStripeMerchantsStripeAccountIDUnauthorized creates a GetPaymentsStripeMerchantsStripeAccountIDUnauthorized with default headers values
func NewGetPaymentsStripeMerchantsStripeAccountIDUnauthorized() *GetPaymentsStripeMerchantsStripeAccountIDUnauthorized {
	return &GetPaymentsStripeMerchantsStripeAccountIDUnauthorized{}
}

/*GetPaymentsStripeMerchantsStripeAccountIDUnauthorized handles this case with default header values.

Unauthorized request
*/
type GetPaymentsStripeMerchantsStripeAccountIDUnauthorized struct {
	Payload *models_secure.Payment401Response
}

func (o *GetPaymentsStripeMerchantsStripeAccountIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /payments/stripe_merchants/{stripe_account_id}][%d] getPaymentsStripeMerchantsStripeAccountIdUnauthorized  %+v", 401, o.Payload)
}

func (o *GetPaymentsStripeMerchantsStripeAccountIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_secure.Payment401Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPaymentsStripeMerchantsStripeAccountIDNotFound creates a GetPaymentsStripeMerchantsStripeAccountIDNotFound with default headers values
func NewGetPaymentsStripeMerchantsStripeAccountIDNotFound() *GetPaymentsStripeMerchantsStripeAccountIDNotFound {
	return &GetPaymentsStripeMerchantsStripeAccountIDNotFound{}
}

/*GetPaymentsStripeMerchantsStripeAccountIDNotFound handles this case with default header values.

Merchant not found.
*/
type GetPaymentsStripeMerchantsStripeAccountIDNotFound struct {
	Payload *models_secure.Http404Response
}

func (o *GetPaymentsStripeMerchantsStripeAccountIDNotFound) Error() string {
	return fmt.Sprintf("[GET /payments/stripe_merchants/{stripe_account_id}][%d] getPaymentsStripeMerchantsStripeAccountIdNotFound  %+v", 404, o.Payload)
}

func (o *GetPaymentsStripeMerchantsStripeAccountIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_secure.Http404Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
