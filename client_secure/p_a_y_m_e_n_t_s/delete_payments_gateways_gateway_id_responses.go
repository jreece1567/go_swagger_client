package p_a_y_m_e_n_t_s

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"restclient/models_secure"
)

// DeletePaymentsGatewaysGatewayIDReader is a Reader for the DeletePaymentsGatewaysGatewayID structure.
type DeletePaymentsGatewaysGatewayIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *DeletePaymentsGatewaysGatewayIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewDeletePaymentsGatewaysGatewayIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewDeletePaymentsGatewaysGatewayIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeletePaymentsGatewaysGatewayIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeletePaymentsGatewaysGatewayIDNoContent creates a DeletePaymentsGatewaysGatewayIDNoContent with default headers values
func NewDeletePaymentsGatewaysGatewayIDNoContent() *DeletePaymentsGatewaysGatewayIDNoContent {
	return &DeletePaymentsGatewaysGatewayIDNoContent{}
}

/*DeletePaymentsGatewaysGatewayIDNoContent handles this case with default header values.

Successfully deleted the gateway.
*/
type DeletePaymentsGatewaysGatewayIDNoContent struct {
}

func (o *DeletePaymentsGatewaysGatewayIDNoContent) Error() string {
	return fmt.Sprintf("[DELETE /payments/gateways/{gateway_id}][%d] deletePaymentsGatewaysGatewayIdNoContent ", 204)
}

func (o *DeletePaymentsGatewaysGatewayIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeletePaymentsGatewaysGatewayIDUnauthorized creates a DeletePaymentsGatewaysGatewayIDUnauthorized with default headers values
func NewDeletePaymentsGatewaysGatewayIDUnauthorized() *DeletePaymentsGatewaysGatewayIDUnauthorized {
	return &DeletePaymentsGatewaysGatewayIDUnauthorized{}
}

/*DeletePaymentsGatewaysGatewayIDUnauthorized handles this case with default header values.

Unauthorized request
*/
type DeletePaymentsGatewaysGatewayIDUnauthorized struct {
	Payload *models_secure.Payment401Response
}

func (o *DeletePaymentsGatewaysGatewayIDUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /payments/gateways/{gateway_id}][%d] deletePaymentsGatewaysGatewayIdUnauthorized  %+v", 401, o.Payload)
}

func (o *DeletePaymentsGatewaysGatewayIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_secure.Payment401Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeletePaymentsGatewaysGatewayIDNotFound creates a DeletePaymentsGatewaysGatewayIDNotFound with default headers values
func NewDeletePaymentsGatewaysGatewayIDNotFound() *DeletePaymentsGatewaysGatewayIDNotFound {
	return &DeletePaymentsGatewaysGatewayIDNotFound{}
}

/*DeletePaymentsGatewaysGatewayIDNotFound handles this case with default header values.

Gateway not found.
*/
type DeletePaymentsGatewaysGatewayIDNotFound struct {
	Payload *models_secure.Http404Response
}

func (o *DeletePaymentsGatewaysGatewayIDNotFound) Error() string {
	return fmt.Sprintf("[DELETE /payments/gateways/{gateway_id}][%d] deletePaymentsGatewaysGatewayIdNotFound  %+v", 404, o.Payload)
}

func (o *DeletePaymentsGatewaysGatewayIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_secure.Http404Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
