package p_a_y_m_e_n_t_s

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"restclient/models_secure"
)

// NewPostPaymentsMerchantsParams creates a new PostPaymentsMerchantsParams object
// with the default values initialized.
func NewPostPaymentsMerchantsParams() *PostPaymentsMerchantsParams {
	var ()
	return &PostPaymentsMerchantsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostPaymentsMerchantsParamsWithTimeout creates a new PostPaymentsMerchantsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostPaymentsMerchantsParamsWithTimeout(timeout time.Duration) *PostPaymentsMerchantsParams {
	var ()
	return &PostPaymentsMerchantsParams{

		timeout: timeout,
	}
}

/*PostPaymentsMerchantsParams contains all the parameters to send to the API endpoint
for the post payments merchants operation typically these are written to a http.Request
*/
type PostPaymentsMerchantsParams struct {

	/*Authorization
	  Access token

	*/
	Authorization string
	/*MerchantData
	  Data to create a merchant.

	*/
	MerchantData *models_secure.MerchantCreateBody

	timeout time.Duration
}

// WithAuthorization adds the authorization to the post payments merchants params
func (o *PostPaymentsMerchantsParams) WithAuthorization(Authorization string) *PostPaymentsMerchantsParams {
	o.Authorization = Authorization
	return o
}

// WithMerchantData adds the merchantData to the post payments merchants params
func (o *PostPaymentsMerchantsParams) WithMerchantData(MerchantData *models_secure.MerchantCreateBody) *PostPaymentsMerchantsParams {
	o.MerchantData = MerchantData
	return o
}

// WriteToRequest writes these params to a swagger request
func (o *PostPaymentsMerchantsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	// header param Authorization
	if err := r.SetHeaderParam("Authorization", o.Authorization); err != nil {
		return err
	}

	if o.MerchantData == nil {
		o.MerchantData = new(models_secure.MerchantCreateBody)
	}

	if err := r.SetBodyParam(o.MerchantData); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
