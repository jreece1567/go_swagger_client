package w_i_s_h_l_i_s_t_s

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new w i s h l i s t s API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for w i s h l i s t s API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
DeleteFavoritesItemsKindResourceID deletes an item from the favorites list

Delete an item from the favorites list.
*/
func (a *Client) DeleteFavoritesItemsKindResourceID(params *DeleteFavoritesItemsKindResourceIDParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteFavoritesItemsKindResourceIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteFavoritesItemsKindResourceIDParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "DeleteFavoritesItemsKindResourceID",
		Method:             "DELETE",
		PathPattern:        "/favorites/items/{kind}/{resource_id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeleteFavoritesItemsKindResourceIDReader{formats: a.formats},
		AuthInfo:           authInfo,
	})
	if err != nil {
		return nil, err
	}
	return result.(*DeleteFavoritesItemsKindResourceIDOK), nil
}

/*
DeleteFavoritesPersonID deletes all data for a specific user

Delete all data for a specific user.
*/
func (a *Client) DeleteFavoritesPersonID(params *DeleteFavoritesPersonIDParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteFavoritesPersonIDNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteFavoritesPersonIDParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "DeleteFavoritesPersonID",
		Method:             "DELETE",
		PathPattern:        "/favorites/{person_id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeleteFavoritesPersonIDReader{formats: a.formats},
		AuthInfo:           authInfo,
	})
	if err != nil {
		return nil, err
	}
	return result.(*DeleteFavoritesPersonIDNoContent), nil
}

/*
GetFavorites retrieves the favorite items

Retrieve the favorite items.
*/
func (a *Client) GetFavorites(params *GetFavoritesParams, authInfo runtime.ClientAuthInfoWriter) (*GetFavoritesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetFavoritesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetFavorites",
		Method:             "GET",
		PathPattern:        "/favorites",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetFavoritesReader{formats: a.formats},
		AuthInfo:           authInfo,
	})
	if err != nil {
		return nil, err
	}
	return result.(*GetFavoritesOK), nil
}

/*
PostFavoritesItems adds an item to the favorites list

Add an item to the favorites list.
*/
func (a *Client) PostFavoritesItems(params *PostFavoritesItemsParams, authInfo runtime.ClientAuthInfoWriter) (*PostFavoritesItemsCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostFavoritesItemsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostFavoritesItems",
		Method:             "POST",
		PathPattern:        "/favorites/items",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostFavoritesItemsReader{formats: a.formats},
		AuthInfo:           authInfo,
	})
	if err != nil {
		return nil, err
	}
	return result.(*PostFavoritesItemsCreated), nil
}

/*
PostFavoritesItemsBulk adds an array of items to be created

Add an array of items to be created.
*/
func (a *Client) PostFavoritesItemsBulk(params *PostFavoritesItemsBulkParams, authInfo runtime.ClientAuthInfoWriter) (*PostFavoritesItemsBulkNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostFavoritesItemsBulkParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostFavoritesItemsBulk",
		Method:             "POST",
		PathPattern:        "/favorites/items/bulk",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostFavoritesItemsBulkReader{formats: a.formats},
		AuthInfo:           authInfo,
	})
	if err != nil {
		return nil, err
	}
	return result.(*PostFavoritesItemsBulkNoContent), nil
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
