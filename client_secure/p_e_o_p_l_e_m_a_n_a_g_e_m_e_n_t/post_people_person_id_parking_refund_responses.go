package p_e_o_p_l_e_m_a_n_a_g_e_m_e_n_t

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"restclient/models_secure"
)

// PostPeoplePersonIDParkingRefundReader is a Reader for the PostPeoplePersonIDParkingRefund structure.
type PostPeoplePersonIDParkingRefundReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *PostPeoplePersonIDParkingRefundReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostPeoplePersonIDParkingRefundOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostPeoplePersonIDParkingRefundBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPostPeoplePersonIDParkingRefundUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPostPeoplePersonIDParkingRefundNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 422:
		result := NewPostPeoplePersonIDParkingRefundUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostPeoplePersonIDParkingRefundOK creates a PostPeoplePersonIDParkingRefundOK with default headers values
func NewPostPeoplePersonIDParkingRefundOK() *PostPeoplePersonIDParkingRefundOK {
	return &PostPeoplePersonIDParkingRefundOK{}
}

/*PostPeoplePersonIDParkingRefundOK handles this case with default header values.

Transaction processed with success. This doesn't mean that the refund was done.
*/
type PostPeoplePersonIDParkingRefundOK struct {
	Payload *models_secure.ParkingRefundResponse
}

func (o *PostPeoplePersonIDParkingRefundOK) Error() string {
	return fmt.Sprintf("[POST /people/{person_id}/parking/refund][%d] postPeoplePersonIdParkingRefundOK  %+v", 200, o.Payload)
}

func (o *PostPeoplePersonIDParkingRefundOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_secure.ParkingRefundResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPeoplePersonIDParkingRefundBadRequest creates a PostPeoplePersonIDParkingRefundBadRequest with default headers values
func NewPostPeoplePersonIDParkingRefundBadRequest() *PostPeoplePersonIDParkingRefundBadRequest {
	return &PostPeoplePersonIDParkingRefundBadRequest{}
}

/*PostPeoplePersonIDParkingRefundBadRequest handles this case with default header values.

Bad request
*/
type PostPeoplePersonIDParkingRefundBadRequest struct {
	Payload *models_secure.Person400Response
}

func (o *PostPeoplePersonIDParkingRefundBadRequest) Error() string {
	return fmt.Sprintf("[POST /people/{person_id}/parking/refund][%d] postPeoplePersonIdParkingRefundBadRequest  %+v", 400, o.Payload)
}

func (o *PostPeoplePersonIDParkingRefundBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_secure.Person400Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPeoplePersonIDParkingRefundUnauthorized creates a PostPeoplePersonIDParkingRefundUnauthorized with default headers values
func NewPostPeoplePersonIDParkingRefundUnauthorized() *PostPeoplePersonIDParkingRefundUnauthorized {
	return &PostPeoplePersonIDParkingRefundUnauthorized{}
}

/*PostPeoplePersonIDParkingRefundUnauthorized handles this case with default header values.

Unauthorized request.
*/
type PostPeoplePersonIDParkingRefundUnauthorized struct {
	Payload *models_secure.UnauthorizedResponse
}

func (o *PostPeoplePersonIDParkingRefundUnauthorized) Error() string {
	return fmt.Sprintf("[POST /people/{person_id}/parking/refund][%d] postPeoplePersonIdParkingRefundUnauthorized  %+v", 401, o.Payload)
}

func (o *PostPeoplePersonIDParkingRefundUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_secure.UnauthorizedResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPeoplePersonIDParkingRefundNotFound creates a PostPeoplePersonIDParkingRefundNotFound with default headers values
func NewPostPeoplePersonIDParkingRefundNotFound() *PostPeoplePersonIDParkingRefundNotFound {
	return &PostPeoplePersonIDParkingRefundNotFound{}
}

/*PostPeoplePersonIDParkingRefundNotFound handles this case with default header values.

Parking session not found.
*/
type PostPeoplePersonIDParkingRefundNotFound struct {
	Payload *models_secure.Http404Response
}

func (o *PostPeoplePersonIDParkingRefundNotFound) Error() string {
	return fmt.Sprintf("[POST /people/{person_id}/parking/refund][%d] postPeoplePersonIdParkingRefundNotFound  %+v", 404, o.Payload)
}

func (o *PostPeoplePersonIDParkingRefundNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_secure.Http404Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPeoplePersonIDParkingRefundUnprocessableEntity creates a PostPeoplePersonIDParkingRefundUnprocessableEntity with default headers values
func NewPostPeoplePersonIDParkingRefundUnprocessableEntity() *PostPeoplePersonIDParkingRefundUnprocessableEntity {
	return &PostPeoplePersonIDParkingRefundUnprocessableEntity{}
}

/*PostPeoplePersonIDParkingRefundUnprocessableEntity handles this case with default header values.

Parking session identifier is invalid
*/
type PostPeoplePersonIDParkingRefundUnprocessableEntity struct {
	Payload *models_secure.InvalidSessionResponse
}

func (o *PostPeoplePersonIDParkingRefundUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /people/{person_id}/parking/refund][%d] postPeoplePersonIdParkingRefundUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *PostPeoplePersonIDParkingRefundUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_secure.InvalidSessionResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
