package p_e_o_p_l_e_m_a_n_a_g_e_m_e_n_t

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"restclient/models_secure"
)

// PostPeoplePersonIDParkingInvoiceReader is a Reader for the PostPeoplePersonIDParkingInvoice structure.
type PostPeoplePersonIDParkingInvoiceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *PostPeoplePersonIDParkingInvoiceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewPostPeoplePersonIDParkingInvoiceNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostPeoplePersonIDParkingInvoiceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPostPeoplePersonIDParkingInvoiceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostPeoplePersonIDParkingInvoiceNoContent creates a PostPeoplePersonIDParkingInvoiceNoContent with default headers values
func NewPostPeoplePersonIDParkingInvoiceNoContent() *PostPeoplePersonIDParkingInvoiceNoContent {
	return &PostPeoplePersonIDParkingInvoiceNoContent{}
}

/*PostPeoplePersonIDParkingInvoiceNoContent handles this case with default header values.

Successfully sent parking invoice email.
*/
type PostPeoplePersonIDParkingInvoiceNoContent struct {
}

func (o *PostPeoplePersonIDParkingInvoiceNoContent) Error() string {
	return fmt.Sprintf("[POST /people/{person_id}/parking/invoice][%d] postPeoplePersonIdParkingInvoiceNoContent ", 204)
}

func (o *PostPeoplePersonIDParkingInvoiceNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostPeoplePersonIDParkingInvoiceBadRequest creates a PostPeoplePersonIDParkingInvoiceBadRequest with default headers values
func NewPostPeoplePersonIDParkingInvoiceBadRequest() *PostPeoplePersonIDParkingInvoiceBadRequest {
	return &PostPeoplePersonIDParkingInvoiceBadRequest{}
}

/*PostPeoplePersonIDParkingInvoiceBadRequest handles this case with default header values.

Bad request
*/
type PostPeoplePersonIDParkingInvoiceBadRequest struct {
	Payload *models_secure.Person400Response
}

func (o *PostPeoplePersonIDParkingInvoiceBadRequest) Error() string {
	return fmt.Sprintf("[POST /people/{person_id}/parking/invoice][%d] postPeoplePersonIdParkingInvoiceBadRequest  %+v", 400, o.Payload)
}

func (o *PostPeoplePersonIDParkingInvoiceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_secure.Person400Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPeoplePersonIDParkingInvoiceUnauthorized creates a PostPeoplePersonIDParkingInvoiceUnauthorized with default headers values
func NewPostPeoplePersonIDParkingInvoiceUnauthorized() *PostPeoplePersonIDParkingInvoiceUnauthorized {
	return &PostPeoplePersonIDParkingInvoiceUnauthorized{}
}

/*PostPeoplePersonIDParkingInvoiceUnauthorized handles this case with default header values.

Unauthorized request.
*/
type PostPeoplePersonIDParkingInvoiceUnauthorized struct {
	Payload *models_secure.UnauthorizedResponse
}

func (o *PostPeoplePersonIDParkingInvoiceUnauthorized) Error() string {
	return fmt.Sprintf("[POST /people/{person_id}/parking/invoice][%d] postPeoplePersonIdParkingInvoiceUnauthorized  %+v", 401, o.Payload)
}

func (o *PostPeoplePersonIDParkingInvoiceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_secure.UnauthorizedResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
