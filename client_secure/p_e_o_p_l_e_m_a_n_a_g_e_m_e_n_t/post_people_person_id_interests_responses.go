package p_e_o_p_l_e_m_a_n_a_g_e_m_e_n_t

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"restclient/models_secure"
)

// PostPeoplePersonIDInterestsReader is a Reader for the PostPeoplePersonIDInterests structure.
type PostPeoplePersonIDInterestsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *PostPeoplePersonIDInterestsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostPeoplePersonIDInterestsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostPeoplePersonIDInterestsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPostPeoplePersonIDInterestsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPostPeoplePersonIDInterestsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 422:
		result := NewPostPeoplePersonIDInterestsUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 423:
		result := NewPostPeoplePersonIDInterestsLocked()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostPeoplePersonIDInterestsOK creates a PostPeoplePersonIDInterestsOK with default headers values
func NewPostPeoplePersonIDInterestsOK() *PostPeoplePersonIDInterestsOK {
	return &PostPeoplePersonIDInterestsOK{}
}

/*PostPeoplePersonIDInterestsOK handles this case with default header values.

Successfully replaced the list of interests of account.
*/
type PostPeoplePersonIDInterestsOK struct {
}

func (o *PostPeoplePersonIDInterestsOK) Error() string {
	return fmt.Sprintf("[POST /people/{person_id}/interests][%d] postPeoplePersonIdInterestsOK ", 200)
}

func (o *PostPeoplePersonIDInterestsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostPeoplePersonIDInterestsBadRequest creates a PostPeoplePersonIDInterestsBadRequest with default headers values
func NewPostPeoplePersonIDInterestsBadRequest() *PostPeoplePersonIDInterestsBadRequest {
	return &PostPeoplePersonIDInterestsBadRequest{}
}

/*PostPeoplePersonIDInterestsBadRequest handles this case with default header values.

Bad request
*/
type PostPeoplePersonIDInterestsBadRequest struct {
	Payload *models_secure.Person400Response
}

func (o *PostPeoplePersonIDInterestsBadRequest) Error() string {
	return fmt.Sprintf("[POST /people/{person_id}/interests][%d] postPeoplePersonIdInterestsBadRequest  %+v", 400, o.Payload)
}

func (o *PostPeoplePersonIDInterestsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_secure.Person400Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPeoplePersonIDInterestsUnauthorized creates a PostPeoplePersonIDInterestsUnauthorized with default headers values
func NewPostPeoplePersonIDInterestsUnauthorized() *PostPeoplePersonIDInterestsUnauthorized {
	return &PostPeoplePersonIDInterestsUnauthorized{}
}

/*PostPeoplePersonIDInterestsUnauthorized handles this case with default header values.

Unauthorized request.
*/
type PostPeoplePersonIDInterestsUnauthorized struct {
	Payload *models_secure.UnauthorizedResponse
}

func (o *PostPeoplePersonIDInterestsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /people/{person_id}/interests][%d] postPeoplePersonIdInterestsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostPeoplePersonIDInterestsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_secure.UnauthorizedResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPeoplePersonIDInterestsNotFound creates a PostPeoplePersonIDInterestsNotFound with default headers values
func NewPostPeoplePersonIDInterestsNotFound() *PostPeoplePersonIDInterestsNotFound {
	return &PostPeoplePersonIDInterestsNotFound{}
}

/*PostPeoplePersonIDInterestsNotFound handles this case with default header values.

Account not found
*/
type PostPeoplePersonIDInterestsNotFound struct {
	Payload *models_secure.Http404Response
}

func (o *PostPeoplePersonIDInterestsNotFound) Error() string {
	return fmt.Sprintf("[POST /people/{person_id}/interests][%d] postPeoplePersonIdInterestsNotFound  %+v", 404, o.Payload)
}

func (o *PostPeoplePersonIDInterestsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_secure.Http404Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPeoplePersonIDInterestsUnprocessableEntity creates a PostPeoplePersonIDInterestsUnprocessableEntity with default headers values
func NewPostPeoplePersonIDInterestsUnprocessableEntity() *PostPeoplePersonIDInterestsUnprocessableEntity {
	return &PostPeoplePersonIDInterestsUnprocessableEntity{}
}

/*PostPeoplePersonIDInterestsUnprocessableEntity handles this case with default header values.

Email and country or authenticated person is missing
*/
type PostPeoplePersonIDInterestsUnprocessableEntity struct {
}

func (o *PostPeoplePersonIDInterestsUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /people/{person_id}/interests][%d] postPeoplePersonIdInterestsUnprocessableEntity ", 422)
}

func (o *PostPeoplePersonIDInterestsUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostPeoplePersonIDInterestsLocked creates a PostPeoplePersonIDInterestsLocked with default headers values
func NewPostPeoplePersonIDInterestsLocked() *PostPeoplePersonIDInterestsLocked {
	return &PostPeoplePersonIDInterestsLocked{}
}

/*PostPeoplePersonIDInterestsLocked handles this case with default header values.

Resource not updated because it's locked.
*/
type PostPeoplePersonIDInterestsLocked struct {
}

func (o *PostPeoplePersonIDInterestsLocked) Error() string {
	return fmt.Sprintf("[POST /people/{person_id}/interests][%d] postPeoplePersonIdInterestsLocked ", 423)
}

func (o *PostPeoplePersonIDInterestsLocked) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
