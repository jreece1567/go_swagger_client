package p_a_r_k_i_n_g

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"restclient/models_secure"
)

// PostParkingSessionsParkingSessionIDChargeReader is a Reader for the PostParkingSessionsParkingSessionIDCharge structure.
type PostParkingSessionsParkingSessionIDChargeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *PostParkingSessionsParkingSessionIDChargeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostParkingSessionsParkingSessionIDChargeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewPostParkingSessionsParkingSessionIDChargeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 422:
		result := NewPostParkingSessionsParkingSessionIDChargeUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostParkingSessionsParkingSessionIDChargeOK creates a PostParkingSessionsParkingSessionIDChargeOK with default headers values
func NewPostParkingSessionsParkingSessionIDChargeOK() *PostParkingSessionsParkingSessionIDChargeOK {
	return &PostParkingSessionsParkingSessionIDChargeOK{}
}

/*PostParkingSessionsParkingSessionIDChargeOK handles this case with default header values.

Successfully reprocessed the charge.
*/
type PostParkingSessionsParkingSessionIDChargeOK struct {
	Payload *models_secure.ParkingSessionTransactionResponse
}

func (o *PostParkingSessionsParkingSessionIDChargeOK) Error() string {
	return fmt.Sprintf("[POST /parking/sessions/{parking_session_id}/charge][%d] postParkingSessionsParkingSessionIdChargeOK  %+v", 200, o.Payload)
}

func (o *PostParkingSessionsParkingSessionIDChargeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_secure.ParkingSessionTransactionResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostParkingSessionsParkingSessionIDChargeNotFound creates a PostParkingSessionsParkingSessionIDChargeNotFound with default headers values
func NewPostParkingSessionsParkingSessionIDChargeNotFound() *PostParkingSessionsParkingSessionIDChargeNotFound {
	return &PostParkingSessionsParkingSessionIDChargeNotFound{}
}

/*PostParkingSessionsParkingSessionIDChargeNotFound handles this case with default header values.

Parking session not found
*/
type PostParkingSessionsParkingSessionIDChargeNotFound struct {
	Payload *models_secure.Http404Response
}

func (o *PostParkingSessionsParkingSessionIDChargeNotFound) Error() string {
	return fmt.Sprintf("[POST /parking/sessions/{parking_session_id}/charge][%d] postParkingSessionsParkingSessionIdChargeNotFound  %+v", 404, o.Payload)
}

func (o *PostParkingSessionsParkingSessionIDChargeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_secure.Http404Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostParkingSessionsParkingSessionIDChargeUnprocessableEntity creates a PostParkingSessionsParkingSessionIDChargeUnprocessableEntity with default headers values
func NewPostParkingSessionsParkingSessionIDChargeUnprocessableEntity() *PostParkingSessionsParkingSessionIDChargeUnprocessableEntity {
	return &PostParkingSessionsParkingSessionIDChargeUnprocessableEntity{}
}

/*PostParkingSessionsParkingSessionIDChargeUnprocessableEntity handles this case with default header values.

Parking session not eligible for a charge.
*/
type PostParkingSessionsParkingSessionIDChargeUnprocessableEntity struct {
	Payload *models_secure.ParkingSessionTransaction422Response
}

func (o *PostParkingSessionsParkingSessionIDChargeUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /parking/sessions/{parking_session_id}/charge][%d] postParkingSessionsParkingSessionIdChargeUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *PostParkingSessionsParkingSessionIDChargeUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_secure.ParkingSessionTransaction422Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
