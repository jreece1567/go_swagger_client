package p_a_r_k_i_n_g

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"restclient/models_secure"
)

// NewPostParkingOperatorsParams creates a new PostParkingOperatorsParams object
// with the default values initialized.
func NewPostParkingOperatorsParams() *PostParkingOperatorsParams {
	var ()
	return &PostParkingOperatorsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostParkingOperatorsParamsWithTimeout creates a new PostParkingOperatorsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostParkingOperatorsParamsWithTimeout(timeout time.Duration) *PostParkingOperatorsParams {
	var ()
	return &PostParkingOperatorsParams{

		timeout: timeout,
	}
}

/*PostParkingOperatorsParams contains all the parameters to send to the API endpoint
for the post parking operators operation typically these are written to a http.Request
*/
type PostParkingOperatorsParams struct {

	/*ParkingOperatorData
	  Data to create a Car Park Business Operator.

	*/
	ParkingOperatorData *models_secure.ParkingOperatorCreateBody

	timeout time.Duration
}

// WithParkingOperatorData adds the parkingOperatorData to the post parking operators params
func (o *PostParkingOperatorsParams) WithParkingOperatorData(ParkingOperatorData *models_secure.ParkingOperatorCreateBody) *PostParkingOperatorsParams {
	o.ParkingOperatorData = ParkingOperatorData
	return o
}

// WriteToRequest writes these params to a swagger request
func (o *PostParkingOperatorsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	if o.ParkingOperatorData == nil {
		o.ParkingOperatorData = new(models_secure.ParkingOperatorCreateBody)
	}

	if err := r.SetBodyParam(o.ParkingOperatorData); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
