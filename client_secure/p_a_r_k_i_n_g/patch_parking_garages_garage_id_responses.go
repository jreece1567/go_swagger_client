package p_a_r_k_i_n_g

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"restclient/models_secure"
)

// PatchParkingGaragesGarageIDReader is a Reader for the PatchParkingGaragesGarageID structure.
type PatchParkingGaragesGarageIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *PatchParkingGaragesGarageIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewPatchParkingGaragesGarageIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewPatchParkingGaragesGarageIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 422:
		result := NewPatchParkingGaragesGarageIDUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPatchParkingGaragesGarageIDNoContent creates a PatchParkingGaragesGarageIDNoContent with default headers values
func NewPatchParkingGaragesGarageIDNoContent() *PatchParkingGaragesGarageIDNoContent {
	return &PatchParkingGaragesGarageIDNoContent{}
}

/*PatchParkingGaragesGarageIDNoContent handles this case with default header values.

Successfully updated the garage.
*/
type PatchParkingGaragesGarageIDNoContent struct {
}

func (o *PatchParkingGaragesGarageIDNoContent) Error() string {
	return fmt.Sprintf("[PATCH /parking/garages/{garage_id}][%d] patchParkingGaragesGarageIdNoContent ", 204)
}

func (o *PatchParkingGaragesGarageIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchParkingGaragesGarageIDNotFound creates a PatchParkingGaragesGarageIDNotFound with default headers values
func NewPatchParkingGaragesGarageIDNotFound() *PatchParkingGaragesGarageIDNotFound {
	return &PatchParkingGaragesGarageIDNotFound{}
}

/*PatchParkingGaragesGarageIDNotFound handles this case with default header values.

Parking Garage not found.
*/
type PatchParkingGaragesGarageIDNotFound struct {
	Payload *models_secure.Http404Response
}

func (o *PatchParkingGaragesGarageIDNotFound) Error() string {
	return fmt.Sprintf("[PATCH /parking/garages/{garage_id}][%d] patchParkingGaragesGarageIdNotFound  %+v", 404, o.Payload)
}

func (o *PatchParkingGaragesGarageIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_secure.Http404Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchParkingGaragesGarageIDUnprocessableEntity creates a PatchParkingGaragesGarageIDUnprocessableEntity with default headers values
func NewPatchParkingGaragesGarageIDUnprocessableEntity() *PatchParkingGaragesGarageIDUnprocessableEntity {
	return &PatchParkingGaragesGarageIDUnprocessableEntity{}
}

/*PatchParkingGaragesGarageIDUnprocessableEntity handles this case with default header values.

Garage not updated. Returns an array of error messages explaining the problems with the provided attributes.
*/
type PatchParkingGaragesGarageIDUnprocessableEntity struct {
	Payload *models_secure.Garages422Response
}

func (o *PatchParkingGaragesGarageIDUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PATCH /parking/garages/{garage_id}][%d] patchParkingGaragesGarageIdUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *PatchParkingGaragesGarageIDUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_secure.Garages422Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
