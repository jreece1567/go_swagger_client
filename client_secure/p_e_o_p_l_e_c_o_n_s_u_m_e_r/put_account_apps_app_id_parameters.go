package p_e_o_p_l_e_c_o_n_s_u_m_e_r

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"restclient/models_secure"
)

// NewPutAccountAppsAppIDParams creates a new PutAccountAppsAppIDParams object
// with the default values initialized.
func NewPutAccountAppsAppIDParams() *PutAccountAppsAppIDParams {
	var ()
	return &PutAccountAppsAppIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPutAccountAppsAppIDParamsWithTimeout creates a new PutAccountAppsAppIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPutAccountAppsAppIDParamsWithTimeout(timeout time.Duration) *PutAccountAppsAppIDParams {
	var ()
	return &PutAccountAppsAppIDParams{

		timeout: timeout,
	}
}

/*PutAccountAppsAppIDParams contains all the parameters to send to the API endpoint
for the put account apps app ID operation typically these are written to a http.Request
*/
type PutAccountAppsAppIDParams struct {

	/*Authorization
	  Access token

	*/
	Authorization string
	/*AppData
	  Data to upsert an application.

	*/
	AppData *models_secure.AccountsAppUpsertBody
	/*AppID
	  Application identifier

	*/
	AppID string

	timeout time.Duration
}

// WithAuthorization adds the authorization to the put account apps app ID params
func (o *PutAccountAppsAppIDParams) WithAuthorization(Authorization string) *PutAccountAppsAppIDParams {
	o.Authorization = Authorization
	return o
}

// WithAppData adds the appData to the put account apps app ID params
func (o *PutAccountAppsAppIDParams) WithAppData(AppData *models_secure.AccountsAppUpsertBody) *PutAccountAppsAppIDParams {
	o.AppData = AppData
	return o
}

// WithAppID adds the appId to the put account apps app ID params
func (o *PutAccountAppsAppIDParams) WithAppID(AppID string) *PutAccountAppsAppIDParams {
	o.AppID = AppID
	return o
}

// WriteToRequest writes these params to a swagger request
func (o *PutAccountAppsAppIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	// header param Authorization
	if err := r.SetHeaderParam("Authorization", o.Authorization); err != nil {
		return err
	}

	if o.AppData == nil {
		o.AppData = new(models_secure.AccountsAppUpsertBody)
	}

	if err := r.SetBodyParam(o.AppData); err != nil {
		return err
	}

	// path param app_id
	if err := r.SetPathParam("app_id", o.AppID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
