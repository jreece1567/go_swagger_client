package p_e_o_p_l_e_c_o_n_s_u_m_e_r

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"restclient/models_secure"
)

// NewPostAccountInterestsParams creates a new PostAccountInterestsParams object
// with the default values initialized.
func NewPostAccountInterestsParams() *PostAccountInterestsParams {
	var ()
	return &PostAccountInterestsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostAccountInterestsParamsWithTimeout creates a new PostAccountInterestsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostAccountInterestsParamsWithTimeout(timeout time.Duration) *PostAccountInterestsParams {
	var ()
	return &PostAccountInterestsParams{

		timeout: timeout,
	}
}

/*PostAccountInterestsParams contains all the parameters to send to the API endpoint
for the post account interests operation typically these are written to a http.Request
*/
type PostAccountInterestsParams struct {

	/*AddInterestsData
	  Data to add interests to account

	*/
	AddInterestsData *models_secure.AddInterestsRequest

	timeout time.Duration
}

// WithAddInterestsData adds the addInterestsData to the post account interests params
func (o *PostAccountInterestsParams) WithAddInterestsData(AddInterestsData *models_secure.AddInterestsRequest) *PostAccountInterestsParams {
	o.AddInterestsData = AddInterestsData
	return o
}

// WriteToRequest writes these params to a swagger request
func (o *PostAccountInterestsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	if o.AddInterestsData == nil {
		o.AddInterestsData = new(models_secure.AddInterestsRequest)
	}

	if err := r.SetBodyParam(o.AddInterestsData); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
