package p_e_o_p_l_e_c_o_n_s_u_m_e_r

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"restclient/models_secure"
)

// NewPatchAccountCreditCardsPaymentMethodTokenParams creates a new PatchAccountCreditCardsPaymentMethodTokenParams object
// with the default values initialized.
func NewPatchAccountCreditCardsPaymentMethodTokenParams() *PatchAccountCreditCardsPaymentMethodTokenParams {
	var ()
	return &PatchAccountCreditCardsPaymentMethodTokenParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPatchAccountCreditCardsPaymentMethodTokenParamsWithTimeout creates a new PatchAccountCreditCardsPaymentMethodTokenParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPatchAccountCreditCardsPaymentMethodTokenParamsWithTimeout(timeout time.Duration) *PatchAccountCreditCardsPaymentMethodTokenParams {
	var ()
	return &PatchAccountCreditCardsPaymentMethodTokenParams{

		timeout: timeout,
	}
}

/*PatchAccountCreditCardsPaymentMethodTokenParams contains all the parameters to send to the API endpoint
for the patch account credit cards payment method token operation typically these are written to a http.Request
*/
type PatchAccountCreditCardsPaymentMethodTokenParams struct {

	/*Authorization
	  Access token.

	*/
	Authorization string
	/*CreditCardData
	  Data to update a credit card.

	*/
	CreditCardData *models_secure.CreditCardUpdateBody
	/*PaymentMethodToken
	  Credit card identifier. Request to update the credit_card with payment_method_token.

	*/
	PaymentMethodToken string

	timeout time.Duration
}

// WithAuthorization adds the authorization to the patch account credit cards payment method token params
func (o *PatchAccountCreditCardsPaymentMethodTokenParams) WithAuthorization(Authorization string) *PatchAccountCreditCardsPaymentMethodTokenParams {
	o.Authorization = Authorization
	return o
}

// WithCreditCardData adds the creditCardData to the patch account credit cards payment method token params
func (o *PatchAccountCreditCardsPaymentMethodTokenParams) WithCreditCardData(CreditCardData *models_secure.CreditCardUpdateBody) *PatchAccountCreditCardsPaymentMethodTokenParams {
	o.CreditCardData = CreditCardData
	return o
}

// WithPaymentMethodToken adds the paymentMethodToken to the patch account credit cards payment method token params
func (o *PatchAccountCreditCardsPaymentMethodTokenParams) WithPaymentMethodToken(PaymentMethodToken string) *PatchAccountCreditCardsPaymentMethodTokenParams {
	o.PaymentMethodToken = PaymentMethodToken
	return o
}

// WriteToRequest writes these params to a swagger request
func (o *PatchAccountCreditCardsPaymentMethodTokenParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	// header param Authorization
	if err := r.SetHeaderParam("Authorization", o.Authorization); err != nil {
		return err
	}

	if o.CreditCardData == nil {
		o.CreditCardData = new(models_secure.CreditCardUpdateBody)
	}

	if err := r.SetBodyParam(o.CreditCardData); err != nil {
		return err
	}

	// path param payment_method_token
	if err := r.SetPathParam("payment_method_token", o.PaymentMethodToken); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
