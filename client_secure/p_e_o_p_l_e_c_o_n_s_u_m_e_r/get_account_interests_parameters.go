package p_e_o_p_l_e_c_o_n_s_u_m_e_r

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetAccountInterestsParams creates a new GetAccountInterestsParams object
// with the default values initialized.
func NewGetAccountInterestsParams() *GetAccountInterestsParams {
	var ()
	return &GetAccountInterestsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetAccountInterestsParamsWithTimeout creates a new GetAccountInterestsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetAccountInterestsParamsWithTimeout(timeout time.Duration) *GetAccountInterestsParams {
	var ()
	return &GetAccountInterestsParams{

		timeout: timeout,
	}
}

/*GetAccountInterestsParams contains all the parameters to send to the API endpoint
for the get account interests operation typically these are written to a http.Request
*/
type GetAccountInterestsParams struct {

	/*Authorization
	  Access token

	*/
	Authorization string

	timeout time.Duration
}

// WithAuthorization adds the authorization to the get account interests params
func (o *GetAccountInterestsParams) WithAuthorization(Authorization string) *GetAccountInterestsParams {
	o.Authorization = Authorization
	return o
}

// WriteToRequest writes these params to a swagger request
func (o *GetAccountInterestsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	// header param Authorization
	if err := r.SetHeaderParam("Authorization", o.Authorization); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
