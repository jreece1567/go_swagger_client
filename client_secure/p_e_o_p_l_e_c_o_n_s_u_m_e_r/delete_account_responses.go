package p_e_o_p_l_e_c_o_n_s_u_m_e_r

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"restclient/models_secure"
)

// DeleteAccountReader is a Reader for the DeleteAccount structure.
type DeleteAccountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *DeleteAccountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewDeleteAccountNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewDeleteAccountUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteAccountNoContent creates a DeleteAccountNoContent with default headers values
func NewDeleteAccountNoContent() *DeleteAccountNoContent {
	return &DeleteAccountNoContent{}
}

/*DeleteAccountNoContent handles this case with default header values.

Successfully deleted the account.
*/
type DeleteAccountNoContent struct {
}

func (o *DeleteAccountNoContent) Error() string {
	return fmt.Sprintf("[DELETE /account][%d] deleteAccountNoContent ", 204)
}

func (o *DeleteAccountNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteAccountUnauthorized creates a DeleteAccountUnauthorized with default headers values
func NewDeleteAccountUnauthorized() *DeleteAccountUnauthorized {
	return &DeleteAccountUnauthorized{}
}

/*DeleteAccountUnauthorized handles this case with default header values.

Unauthorized request.
*/
type DeleteAccountUnauthorized struct {
	Payload *models_secure.UnauthorizedResponse
}

func (o *DeleteAccountUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /account][%d] deleteAccountUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteAccountUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_secure.UnauthorizedResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
