package s_t_a_f_f_a_u_t_h

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"restclient/models_secure"
)

// GetStaffTokenInfoReader is a Reader for the GetStaffTokenInfo structure.
type GetStaffTokenInfoReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *GetStaffTokenInfoReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetStaffTokenInfoOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetStaffTokenInfoUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetStaffTokenInfoOK creates a GetStaffTokenInfoOK with default headers values
func NewGetStaffTokenInfoOK() *GetStaffTokenInfoOK {
	return &GetStaffTokenInfoOK{}
}

/*GetStaffTokenInfoOK handles this case with default header values.

Returns token information.
*/
type GetStaffTokenInfoOK struct {
	Payload *models_secure.TokenInfo
}

func (o *GetStaffTokenInfoOK) Error() string {
	return fmt.Sprintf("[GET /staff/token/info][%d] getStaffTokenInfoOK  %+v", 200, o.Payload)
}

func (o *GetStaffTokenInfoOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_secure.TokenInfo)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetStaffTokenInfoUnauthorized creates a GetStaffTokenInfoUnauthorized with default headers values
func NewGetStaffTokenInfoUnauthorized() *GetStaffTokenInfoUnauthorized {
	return &GetStaffTokenInfoUnauthorized{}
}

/*GetStaffTokenInfoUnauthorized handles this case with default header values.

Unauthorized.
*/
type GetStaffTokenInfoUnauthorized struct {
	Payload *models_secure.AuthorizationErrorResponse
}

func (o *GetStaffTokenInfoUnauthorized) Error() string {
	return fmt.Sprintf("[GET /staff/token/info][%d] getStaffTokenInfoUnauthorized  %+v", 401, o.Payload)
}

func (o *GetStaffTokenInfoUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models_secure.AuthorizationErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
