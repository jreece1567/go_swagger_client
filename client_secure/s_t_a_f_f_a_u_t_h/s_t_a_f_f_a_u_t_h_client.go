package s_t_a_f_f_a_u_t_h

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new s t a f f a u t h API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for s t a f f a u t h API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
GetStaffTokenInfo returns information about an o auth access token
*/
func (a *Client) GetStaffTokenInfo(params *GetStaffTokenInfoParams, authInfo runtime.ClientAuthInfoWriter) (*GetStaffTokenInfoOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetStaffTokenInfoParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetStaffTokenInfo",
		Method:             "GET",
		PathPattern:        "/staff/token/info",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetStaffTokenInfoReader{formats: a.formats},
		AuthInfo:           authInfo,
	})
	if err != nil {
		return nil, err
	}
	return result.(*GetStaffTokenInfoOK), nil
}

/*
PostStaffRevoke revokes an o auth token
*/
func (a *Client) PostStaffRevoke(params *PostStaffRevokeParams, authInfo runtime.ClientAuthInfoWriter) (*PostStaffRevokeOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostStaffRevokeParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostStaffRevoke",
		Method:             "POST",
		PathPattern:        "/staff/revoke",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostStaffRevokeReader{formats: a.formats},
		AuthInfo:           authInfo,
	})
	if err != nil {
		return nil, err
	}
	return result.(*PostStaffRevokeOK), nil
}

/*
PostStaffToken creates o auth token

If you send the grant type `client_credentials` you must also provide the `client_id` and `client_secret`. If you send the grant type `password` you must also provide the `username` and `password`; you may optionally provide `client_id` and `client_secret`. If you send the grant type as `authorization_code`, you must provide the `client_id` and `client_secret` along with the `code` and `redirect_uri`.
*/
func (a *Client) PostStaffToken(params *PostStaffTokenParams, authInfo runtime.ClientAuthInfoWriter) (*PostStaffTokenOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostStaffTokenParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostStaffToken",
		Method:             "POST",
		PathPattern:        "/staff/token",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostStaffTokenReader{formats: a.formats},
		AuthInfo:           authInfo,
	})
	if err != nil {
		return nil, err
	}
	return result.(*PostStaffTokenOK), nil
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
